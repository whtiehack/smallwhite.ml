<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>smallwhite&#39;s Blog</title>
  
  <subtitle>smallwhite&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://smallwhite.ml/"/>
  <updated>2020-11-18T03:13:32.674Z</updated>
  <id>https://smallwhite.ml/</id>
  
  <author>
    <name>[object Object]</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>golang http请求返回403 Forbidden - 禁用http2解决</title>
    <link href="https://smallwhite.ml/pub/http2/golang-http-403-forbidden-disable-http2.html"/>
    <id>https://smallwhite.ml/pub/http2/golang-http-403-forbidden-disable-http2.html</id>
    <published>2020-11-17T14:07:21.000Z</published>
    <updated>2020-11-18T03:13:32.674Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>有一个api   <a href="https://www-openapi.hualala.com/card/getCrmCustomerCards" target="_blank" rel="noopener">https://www-openapi.hualala.com/card/getCrmCustomerCards</a></p><p>要求必须传一个header</p><p><code>groupID</code> api提供方强制要求区分大小写</p><p>用 <code>golang</code>写的请求,在有的机器上会返回 <code>statusCode: 403</code></p><p>最后根据 api 提供方提供的日志 可以看到 对方收到的header都是小写.</p><p>最后排查问题是由于  http2, http2 要求 所有header<code>必须小写</code>.<a href="https://github.com/halfrost/Halfrost-Field/blob/master/contents/Protocol/HTTP:2-HTTP-Semantics.md#2-http-header-fields" target="_blank" rel="noopener">http-header-fields</a></p><p>所以 curl, golang 客户端对支持http2协议服务器请求的时候会自动帮你把 header转换为小写</p><blockquote><p> (golang 从1.6版本开始,默认是直接开启http2的支持的)</p></blockquote><p>所以解决这个问题只需要强制客户端不使用http2即可</p><h3 id="问题简单复现"><a href="#问题简单复现" class="headerlink" title="问题简单复现"></a>问题简单复现</h3><h5 id="环境一"><a href="#环境一" class="headerlink" title="环境一:"></a>环境一:</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  curl --version</span></span><br><span class="line">curl 7.61.1 (x86_64-redhat-linux-gnu) libcurl/7.61.1 OpenSSL/1.1.1c zlib/1.2.11 brotli/1.0.6 libidn2/2.2.0 libpsl/0.20.2 (+libidn2/2.0.5) libssh/0.9.0/openssl/zlib nghttp2/1.33.0</span><br><span class="line">Release-Date: 2018-09-05</span><br><span class="line">Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtsp scp sftp smb smbs smtp smtps telnet tftp </span><br><span class="line">Features: AsynchDNS IDN IPv6 Largefile GSS-API Kerberos SPNEGO NTLM NTLM_WB SSL libz brotli TLS-SRP HTTP2 UnixSockets HTTPS-proxy PSL Metalink</span><br><span class="line"></span><br><span class="line"><span class="comment"># uname -a</span></span><br><span class="line">Linux iZuf6d97t0sgars8ay4jt3Z 4.18.0-193.28.1.el8_2.x86_64 <span class="comment">#1 SMP Thu Oct 22 00:20:22 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cat /etc/redhat-release </span></span><br><span class="line">CentOS Linux release 8.2.2004 (Core)</span><br></pre></td></tr></table></figure><ul><li>curl请求:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl -H "Content-Type: application/json" -H "groupID: 1234" -X POST -d '&#123;&#125;' -v  https://www-openapi.hualala.com/card/getCrmCustomerCards</span></span><br><span class="line">Note: Unnecessary use of -X or --request, POST is already inferred.</span><br><span class="line">*   Trying 106.15.155.28...</span><br><span class="line">* TCP_NODELAY <span class="built_in">set</span></span><br><span class="line">* Connected to www-openapi.hualala.com (106.15.155.28) port 443 (<span class="comment">#0)</span></span><br><span class="line">* ALPN, offering h2</span><br><span class="line">* ALPN, offering http/1.1</span><br><span class="line">* successfully <span class="built_in">set</span> certificate verify locations:</span><br><span class="line">*   CAfile: /etc/pki/tls/certs/ca-bundle.crt</span><br><span class="line">  CApath: none</span><br><span class="line">* TLSv1.3 (OUT), TLS handshake, Client hello (1):</span><br><span class="line">* TLSv1.3 (IN), TLS handshake, Server hello (2):</span><br><span class="line">* TLSv1.2 (IN), TLS handshake, Certificate (11):</span><br><span class="line">* TLSv1.2 (IN), TLS handshake, Server key exchange (12):</span><br><span class="line">* TLSv1.2 (IN), TLS handshake, Server finished (14):</span><br><span class="line">* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):</span><br><span class="line">* TLSv1.2 (OUT), TLS change cipher, Change cipher spec (1):</span><br><span class="line">* TLSv1.2 (OUT), TLS handshake, Finished (20):</span><br><span class="line">* TLSv1.2 (IN), TLS handshake, Finished (20):</span><br><span class="line">* SSL connection using TLSv1.2 / ECDHE-RSA-AES128-GCM-SHA256</span><br><span class="line">* ALPN, server accepted to use h2</span><br><span class="line">* Server certificate:</span><br><span class="line">*  subject: C=CN; ST=\U5317\U4EAC\U5E02; O=\U5317\U4EAC\U591A\U6765\U70B9\U4FE1\U606F\U6280\U672F\U6709\U9650\U516C\U53F8; CN=*.hualala.com</span><br><span class="line">*  start date: Jun 23 00:00:00 2020 GMT</span><br><span class="line">*  expire date: Jun 27 12:00:00 2022 GMT</span><br><span class="line">*  subjectAltName: host <span class="string">"www-openapi.hualala.com"</span> matched cert<span class="string">'s "*.hualala.com"</span></span><br><span class="line"><span class="string">*  issuer: C=US; O=DigiCert Inc; OU=www.digicert.com; CN=GeoTrust CN RSA CA G1</span></span><br><span class="line"><span class="string">*  SSL certificate verify ok.</span></span><br><span class="line"><span class="string">* Using HTTP2, server supports multi-use</span></span><br><span class="line"><span class="string">* Connection state changed (HTTP/2 confirmed)</span></span><br><span class="line"><span class="string">* Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0</span></span><br><span class="line"><span class="string">* Using Stream ID: 1 (easy handle 0x5595c0bf6720)</span></span><br><span class="line"><span class="string">&gt; POST /card/getCrmCustomerCards HTTP/2</span></span><br><span class="line"><span class="string">&gt; Host: www-openapi.hualala.com</span></span><br><span class="line"><span class="string">&gt; User-Agent: curl/7.61.1</span></span><br><span class="line"><span class="string">&gt; Accept: */*</span></span><br><span class="line"><span class="string">&gt; Content-Type: application/json</span></span><br><span class="line"><span class="string">&gt; groupID: 1234</span></span><br><span class="line"><span class="string">&gt; Content-Length: 2</span></span><br><span class="line"><span class="string">&gt; </span></span><br><span class="line"><span class="string">* Connection state changed (MAX_CONCURRENT_STREAMS == 128)!</span></span><br><span class="line"><span class="string">* We are completely uploaded and fine</span></span><br><span class="line"><span class="string">&lt; HTTP/2 403 </span></span><br><span class="line"><span class="string">&lt; date: Tue, 17 Nov 2020 12:30:10 GMT</span></span><br><span class="line"><span class="string">&lt; content-type: text/plain; charset=utf-8</span></span><br><span class="line"><span class="string">&lt; content-length: 0</span></span><br><span class="line"><span class="string">&lt; </span></span><br><span class="line"><span class="string">* Connection #0 to host www-openapi.hualala.com left intact</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>Connection state changed (HTTP/2 confirmed)</li></ul></blockquote><p>可以看到 ,这个环境上的curl检测服服务端支持http2,所以直接切换到了http2, 因为http2的header约束,所以对方只会收到小写的header.</p><p>所以返回的 <code>StatusCode</code> 是 <code>403</code></p><ul><li>禁用 curl的 http2</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl -H "Content-Type: application/json" -H "groupID: 1234" -X POST -d '&#123;&#125;' -v --http1.1 https://www-openapi.hualala.com/card/getCrmCustomerCards</span></span><br><span class="line">Note: Unnecessary use of -X or --request, POST is already inferred.</span><br><span class="line">*   Trying 106.15.155.28...</span><br><span class="line">* TCP_NODELAY <span class="built_in">set</span></span><br><span class="line">* Connected to www-openapi.hualala.com (106.15.155.28) port 443 (<span class="comment">#0)</span></span><br><span class="line">* ALPN, offering http/1.1</span><br><span class="line">* successfully <span class="built_in">set</span> certificate verify locations:</span><br><span class="line">*   CAfile: /etc/pki/tls/certs/ca-bundle.crt</span><br><span class="line">  CApath: none</span><br><span class="line">* TLSv1.3 (OUT), TLS handshake, Client hello (1):</span><br><span class="line">* TLSv1.3 (IN), TLS handshake, Server hello (2):</span><br><span class="line">* TLSv1.2 (IN), TLS handshake, Certificate (11):</span><br><span class="line">* TLSv1.2 (IN), TLS handshake, Server key exchange (12):</span><br><span class="line">* TLSv1.2 (IN), TLS handshake, Server finished (14):</span><br><span class="line">* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):</span><br><span class="line">* TLSv1.2 (OUT), TLS change cipher, Change cipher spec (1):</span><br><span class="line">* TLSv1.2 (OUT), TLS handshake, Finished (20):</span><br><span class="line">* TLSv1.2 (IN), TLS handshake, Finished (20):</span><br><span class="line">* SSL connection using TLSv1.2 / ECDHE-RSA-AES128-GCM-SHA256</span><br><span class="line">* ALPN, server accepted to use http/1.1</span><br><span class="line">* Server certificate:</span><br><span class="line">*  subject: C=CN; ST=\U5317\U4EAC\U5E02; O=\U5317\U4EAC\U591A\U6765\U70B9\U4FE1\U606F\U6280\U672F\U6709\U9650\U516C\U53F8; CN=*.hualala.com</span><br><span class="line">*  start date: Jun 23 00:00:00 2020 GMT</span><br><span class="line">*  expire date: Jun 27 12:00:00 2022 GMT</span><br><span class="line">*  subjectAltName: host <span class="string">"www-openapi.hualala.com"</span> matched cert<span class="string">'s "*.hualala.com"</span></span><br><span class="line"><span class="string">*  issuer: C=US; O=DigiCert Inc; OU=www.digicert.com; CN=GeoTrust CN RSA CA G1</span></span><br><span class="line"><span class="string">*  SSL certificate verify ok.</span></span><br><span class="line"><span class="string">&gt; POST /card/getCrmCustomerCards HTTP/1.1</span></span><br><span class="line"><span class="string">&gt; Host: www-openapi.hualala.com</span></span><br><span class="line"><span class="string">&gt; User-Agent: curl/7.61.1</span></span><br><span class="line"><span class="string">&gt; Accept: */*</span></span><br><span class="line"><span class="string">&gt; Content-Type: application/json</span></span><br><span class="line"><span class="string">&gt; groupID: 1234</span></span><br><span class="line"><span class="string">&gt; Content-Length: 2</span></span><br><span class="line"><span class="string">&gt; </span></span><br><span class="line"><span class="string">* upload completely sent off: 2 out of 2 bytes</span></span><br><span class="line"><span class="string">&lt; HTTP/1.1 500 Internal Server Error</span></span><br><span class="line"><span class="string">&lt; Date: Tue, 17 Nov 2020 12:34:51 GMT</span></span><br><span class="line"><span class="string">&lt; Content-Type: application/json;charset=UTF-8</span></span><br><span class="line"><span class="string">&lt; Content-Length: 170</span></span><br><span class="line"><span class="string">&lt; Connection: keep-alive</span></span><br><span class="line"><span class="string">&lt; Kepler-Agenttoken: bQZZvZti</span></span><br><span class="line"><span class="string">&lt; X-Application-Context: application:prod:8098</span></span><br><span class="line"><span class="string">&lt; </span></span><br><span class="line"><span class="string">* Connection #0 to host www-openapi.hualala.com left intact</span></span><br><span class="line"><span class="string">&#123;"timestamp":1605616491448,"status":500,"error":"Internal Server Error","exception":"java.lang.NumberFormatException","message":"null","path":"/card/getCrmCustomerCards"&#125;</span></span><br></pre></td></tr></table></figure><p>可以看到 ,指定 使用 <code>http1.1</code> 的时候,服务端可以有正确的返回了.</p><h5 id="环境二"><a href="#环境二" class="headerlink" title="环境二:"></a>环境二:</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl --version</span></span><br><span class="line">curl 7.29.0 (x86_64-redhat-linux-gnu) libcurl/7.29.0 NSS/3.36 zlib/1.2.7 libidn/1.28 libssh2/1.4.3</span><br><span class="line">Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtsp scp sftp smtp smtps telnet tftp </span><br><span class="line">Features: AsynchDNS GSS-Negotiate IDN IPv6 Largefile NTLM NTLM_WB SSL libz unix-sockets </span><br><span class="line"></span><br><span class="line"><span class="comment"># uname -a</span></span><br><span class="line">Linux xxx 3.10.0-693.2.2.el7.x86_64 <span class="comment">#1 SMP Tue Sep 12 22:26:13 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cat /etc/redhat-release </span></span><br><span class="line">CentOS Linux release 7.4.1708 (Core)</span><br></pre></td></tr></table></figure><ul><li>curl 请求:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl -H "Content-Type: application/json" -H "groupID: 268654" -X POST -d '&#123;&#125;' -v https://www-openapi.hualala.com/card/getCrmCustomerCards</span></span><br><span class="line">* About to connect() to www-openapi.hualala.com port 443 (<span class="comment">#0)</span></span><br><span class="line">*   Trying 106.15.155.28...</span><br><span class="line">* Connected to www-openapi.hualala.com (106.15.155.28) port 443 (<span class="comment">#0)</span></span><br><span class="line">* Initializing NSS with certpath: sql:/etc/pki/nssdb</span><br><span class="line">*   CAfile: /etc/pki/tls/certs/ca-bundle.crt</span><br><span class="line">  CApath: none</span><br><span class="line">* SSL connection using TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256</span><br><span class="line">* Server certificate:</span><br><span class="line">* subject: CN=*.hualala.com,O=北京多来点信息技术有限公司,ST=北京市,C=CN</span><br><span class="line">* start date: Jun 23 00:00:00 2020 GMT</span><br><span class="line">* expire date: Jun 27 12:00:00 2022 GMT</span><br><span class="line">* common name: *.hualala.com</span><br><span class="line">* issuer: CN=GeoTrust CN RSA CA G1,OU=www.digicert.com,O=DigiCert Inc,C=US</span><br><span class="line">&gt; POST /card/getCrmCustomerCards HTTP/1.1</span><br><span class="line">&gt; User-Agent: curl/7.29.0</span><br><span class="line">&gt; Host: www-openapi.hualala.com</span><br><span class="line">&gt; Accept: */*</span><br><span class="line">&gt; Content-Type: application/json</span><br><span class="line">&gt; groupID: 268654</span><br><span class="line">&gt; Content-Length: 2</span><br><span class="line">&gt; </span><br><span class="line">* upload completely sent off: 2 out of 2 bytes</span><br><span class="line">&lt; HTTP/1.1 500 Internal Server Error</span><br><span class="line">&lt; Date: Tue, 17 Nov 2020 11:49:42 GMT</span><br><span class="line">&lt; Content-Type: application/json;charset=UTF-8</span><br><span class="line">&lt; Content-Length: 170</span><br><span class="line">&lt; Connection: keep-alive</span><br><span class="line">&lt; Kepler-Agenttoken: Zl10WFsP</span><br><span class="line">&lt; X-Application-Context: application:prod:8098</span><br><span class="line">&lt; </span><br><span class="line">* Connection <span class="comment">#0 to host www-openapi.hualala.com left intact</span></span><br><span class="line">&#123;<span class="string">"timestamp"</span>:1605613782836,<span class="string">"status"</span>:500,<span class="string">"error"</span>:<span class="string">"Internal Server Error"</span>,<span class="string">"exception"</span>:<span class="string">"java.lang.NumberFormatException"</span>,<span class="string">"message"</span>:<span class="string">"null"</span>,<span class="string">"path"</span>:<span class="string">"/card/getCrmCustomerCards"</span>&#125;</span><br></pre></td></tr></table></figure><p>可以看到,在不支持<code>http2</code>的环境里,是可以正常返回数据的.</p><h3 id="如何解决"><a href="#如何解决" class="headerlink" title="如何解决"></a>如何解决</h3><p>针对目前碰到的这个问题.只需要禁用客户端请求的<code>http2</code>功能即可</p><p>golang的 <code>http.Client</code> 禁用<code>http2</code>有两种方法</p><ul><li>方法一: 使用<code>GODEBUG</code>环境变量</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GODEBUG=http2client=0</span><br></pre></td></tr></table></figure><p>golang的<code>http.Client</code>的 Transport 检测到有这个环境变量就不会走 http2</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// D:\Go\src\net\http\transport.go</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// onceSetNextProtoDefaults initializes TLSNextProto.</span></span><br><span class="line"><span class="comment">// It must be called via t.nextProtoOnce.Do.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *Transport)</span> <span class="title">onceSetNextProtoDefaults</span><span class="params">()</span></span> &#123;</span><br><span class="line">t.tlsNextProtoWasNil = (t.TLSNextProto == <span class="literal">nil</span>)</span><br><span class="line"><span class="keyword">if</span> strings.Contains(os.Getenv(<span class="string">"GODEBUG"</span>), <span class="string">"http2client=0"</span>) &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>方法二: 设置 <code>Transport</code>的 <code>TLSNextProto</code> 为空map</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用自定义 client的时候</span></span><br><span class="line">client := &amp;http.Client&#123;</span><br><span class="line">Transport: &amp;http.Transport&#123;</span><br><span class="line">TLSNextProto: <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="function"><span class="keyword">func</span><span class="params">(authority <span class="keyword">string</span>, c *tls.Conn)</span> <span class="title">http</span>.<span class="title">RoundTripper</span>),</span></span><br><span class="line"><span class="function">&#125;,</span></span><br><span class="line"><span class="function">&#125;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">// 如果用的是默认 <span class="title">client</span></span></span><br><span class="line"><span class="function"><span class="title">http</span>.<span class="title">DefaultClient</span>.<span class="title">Transport</span> = &amp;<span class="title">http</span>.<span class="title">Transport</span></span>&#123;</span><br><span class="line">    TLSNextProto: <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="function"><span class="keyword">func</span><span class="params">(authority <span class="keyword">string</span>, c *tls.Conn)</span> <span class="title">http</span>.<span class="title">RoundTripper</span>),</span></span><br><span class="line"><span class="function">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;有一个api   &lt;a href=&quot;https://www-openapi.hualala.com/card/getCrmC
      
    
    </summary>
    
      <category term="http2" scheme="https://smallwhite.ml/categories/http2/"/>
    
    
      <category term="linux" scheme="https://smallwhite.ml/tags/linux/"/>
    
      <category term="golang" scheme="https://smallwhite.ml/tags/golang/"/>
    
      <category term="http2" scheme="https://smallwhite.ml/tags/http2/"/>
    
  </entry>
  
  <entry>
    <title>转换key格式OPENSSH PRIVATE KEY 转换为 RSA PRIVATE KEY</title>
    <link href="https://smallwhite.ml/pub/linux/convert-ssh-key-format-rsa-openssh.html"/>
    <id>https://smallwhite.ml/pub/linux/convert-ssh-key-format-rsa-openssh.html</id>
    <published>2020-11-07T14:49:21.000Z</published>
    <updated>2020-11-18T03:13:32.674Z</updated>
    
    <content type="html"><![CDATA[<h3 id="git-bash-里的-scp-不支持-openssh格式的key"><a href="#git-bash-里的-scp-不支持-openssh格式的key" class="headerlink" title="git bash 里的 scp 不支持 openssh格式的key"></a>git bash 里的 scp 不支持 openssh格式的key</h3><p>所以需要转换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN OPENSSH PRIVATE KEY-----</span><br><span class="line">XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</span><br><span class="line">XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</span><br><span class="line">XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</span><br><span class="line">XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</span><br><span class="line">-----END OPENSSH PRIVATE KEY-----</span><br></pre></td></tr></table></figure><p>转换为 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</span><br><span class="line">XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</span><br><span class="line">XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</span><br><span class="line">XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li><p>打开 puttygen.exe</p></li><li><p>点 load 加载你的 OPENSSH key文件</p></li><li><p>点 Conversions -&gt; Export OpenSSH key</p></li><li><p>保存</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;git-bash-里的-scp-不支持-openssh格式的key&quot;&gt;&lt;a href=&quot;#git-bash-里的-scp-不支持-openssh格式的key&quot; class=&quot;headerlink&quot; title=&quot;git bash 里的 scp 不支持 openss
      
    
    </summary>
    
      <category term="linux" scheme="https://smallwhite.ml/categories/linux/"/>
    
    
      <category term="linux" scheme="https://smallwhite.ml/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>使用镜像安装jenkins</title>
    <link href="https://smallwhite.ml/pub/jenkins/install-jenkins-use-mirrors.html"/>
    <id>https://smallwhite.ml/pub/jenkins/install-jenkins-use-mirrors.html</id>
    <published>2020-04-03T06:46:33.000Z</published>
    <updated>2020-11-18T03:13:32.674Z</updated>
    
    <content type="html"><![CDATA[<p>设置jenkins插件下载镜像也可以参考。</p><p>网上好几个文章都是要不停的改 <code>default.json</code>文件。治标不治本。</p><h3 id="download-and-install-Jenkins"><a href="#download-and-install-Jenkins" class="headerlink" title="download and install Jenkins"></a>download and install Jenkins</h3><p>下载地址： <a href="https://jenkins.io/zh/download/" target="_blank" rel="noopener">https://jenkins.io/zh/download/</a></p><p>安装过程：略</p><p>安装好以后先不要启动，如果已经启动了先停止</p><p><code>jenkins stop</code></p><h4 id="修改-UpdateCenter-地址为-清华的境像地址"><a href="#修改-UpdateCenter-地址为-清华的境像地址" class="headerlink" title="修改 UpdateCenter 地址为 清华的境像地址"></a>修改 UpdateCenter 地址为 清华的境像地址</h4><p>进入 Jenkins 目录 找到 <code>hudson.model.UpdateCenter.xml</code> 文件。</p><p> 修改 <code>url</code>为  <code>https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</code></p><h4 id="设置-nginx-或者-caddy-代理"><a href="#设置-nginx-或者-caddy-代理" class="headerlink" title="设置 nginx 或者 caddy 代理"></a>设置 <code>nginx</code> 或者 <code>caddy</code> 代理</h4><ul><li>nginx</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rewrite ^/download/plugins/(.*)$ https://mirrors.tuna.tsinghua.edu.cn/jenkins/plugins/$1? last;</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> /download/plugins</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">proxy_next_upstream</span> http_502 http_504 <span class="literal">error</span> timeout invalid_header;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Host mirrors.tuna.tsinghua.edu.cn;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>; </span><br><span class="line">    <span class="attribute">rewrite</span> /download/plugins(.*) /jenkins/plugins/<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">    <span class="attribute">proxy_pass</span> https://mirrors.tuna.tsinghua.edu.cn;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>caddy</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">:80 &#123;</span><br><span class="line">   gzip</span><br><span class="line">   log stdout</span><br><span class="line">   rewrite /download/plugins &#123;</span><br><span class="line">  r (.*)</span><br><span class="line">      to /jenkins/plugins/&#123;1&#125;</span><br><span class="line">   &#125;</span><br><span class="line">   proxy / https://mirrors.tuna.tsinghua.edu.cn</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="设置-hosts"><a href="#设置-hosts" class="headerlink" title="设置 hosts"></a>设置 <code>hosts</code></h4><p>找到<code>hosts</code>文件 添加一行  </p><p><code>192.168.1.10 updates.jenkins-ci.org</code></p><p>如果 代理设置在本地 就填 <code>127.0.0.1</code></p><h4 id="启动-Jenkins"><a href="#启动-Jenkins" class="headerlink" title="启动 Jenkins"></a>启动 Jenkins</h4><p><code>jenkins start</code></p><p>打开 <code>localhost:8080</code></p><p>这样就可以有一个愉快的安装过程了。</p><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><p>可以直接使用 jenkins中文社区提供的 UpdateCenter地址，就可以不需要配置代理了</p><p><code>https://updates.jenkins-zh.cn/update-center.json</code></p><p>不过不知道什么原因，我更换成这个地址时尝试失败了。</p><p>如果换成这个地址有问题 就停止 jenkins，地址换回去 再重新启动</p><h3 id="2020-06-02-更新"><a href="#2020-06-02-更新" class="headerlink" title="2020/06/02 更新"></a>2020/06/02 更新</h3><p><code>hudson.model.UpdateCenter.xml</code>  文件在 mac下的 <code>/Users/xxx/.jenkins</code> 目录</p><p>caddy 配置. 可以更新 war版本了.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">:80 &#123;</span><br><span class="line">   gzip</span><br><span class="line">   log stdout</span><br><span class="line">   rewrite /download &#123;</span><br><span class="line">  r (.*)</span><br><span class="line">      to /jenkins/&#123;1&#125;</span><br><span class="line">   &#125;</span><br><span class="line">   proxy / https://mirrors.tuna.tsinghua.edu.cn</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;设置jenkins插件下载镜像也可以参考。&lt;/p&gt;
&lt;p&gt;网上好几个文章都是要不停的改 &lt;code&gt;default.json&lt;/code&gt;文件。治标不治本。&lt;/p&gt;
&lt;h3 id=&quot;download-and-install-Jenkins&quot;&gt;&lt;a href=&quot;#downlo
      
    
    </summary>
    
      <category term="jenkins" scheme="https://smallwhite.ml/categories/jenkins/"/>
    
    
      <category term="jenkins" scheme="https://smallwhite.ml/tags/jenkins/"/>
    
      <category term="mirrors" scheme="https://smallwhite.ml/tags/mirrors/"/>
    
  </entry>
  
  <entry>
    <title>go c nodejs csharp 可能不太准确的性能测试</title>
    <link href="https://smallwhite.ml/pub/nodejs/compare-go-nodejs-csharp.html"/>
    <id>https://smallwhite.ml/pub/nodejs/compare-go-nodejs-csharp.html</id>
    <published>2019-11-15T10:28:44.000Z</published>
    <updated>2020-11-18T03:13:32.674Z</updated>
    
    <content type="html"><![CDATA[<h3 id="斐波那契数列-百度百科"><a href="#斐波那契数列-百度百科" class="headerlink" title="斐波那契数列 (百度百科)"></a>斐波那契数列 (百度百科)</h3><p>斐波那契数列（Fibonacci sequence），又称<a href="https://baike.baidu.com/item/黄金分割/115896" target="_blank" rel="noopener">黄金分割</a>数列、因<a href="https://baike.baidu.com/item/数学家/1210991" target="_blank" rel="noopener">数学家</a>列昂纳多·斐波那契（Leonardoda Fibonacci）以兔子繁殖为例子而引入，故又称为“<a href="https://baike.baidu.com/item/兔子数列/6849441" target="_blank" rel="noopener">兔子数列</a>”，指的是这样一个数列：1、1、2、3、5、8、13、21、34、……在数学上，斐波那契数列以如下被以<a href="https://baike.baidu.com/item/递推/1740695" target="_blank" rel="noopener">递推</a>的方法定义：F(1)=1，F(2)=1, F(n)=F(n-1)+F(n-2)（n&gt;=3，n∈N*）在现代物理、准晶体结构、化学等领域，斐波纳契数列都有直接的应用，为此，美国数学会从1963年起出版了以《斐波纳契数列季刊》为名的一份数学杂志，用于专门刊载这方面的研究成果。</p><hr><h3 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h3><p>每种语言都用递归和非递归两种方式来测试。</p><p>100w次非递归 fibonacci(50);</p><p>100次递归 fibonacci(30);</p><p>主要是测试代码执行效率。</p><h2 id="contents"><a href="#contents" class="headerlink" title="contents"></a>contents</h2><ul><li><a href="#nodejs">Nodejs</a></li><li><a href="#go-and-c">go and c</a></li><li><a href="#csharp">csharp</a></li><li><a href="#Results">Results</a></li></ul><hr><h4 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h4><ul><li>版本</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">v10.14.1</span><br></pre></td></tr></table></figure><ul><li>测试代码</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'test begin'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fibonacci</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> one = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">let</span> two = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">let</span> three = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">3</span>; i &lt;= n; i++) &#123;　　　　<span class="comment">//此处代码重点部分，用three累加前两个数的和，也是斐波那契数列的精髓所在。</span></span><br><span class="line">        three = one + two;</span><br><span class="line">        one = two;</span><br><span class="line">        two = three;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (n === <span class="number">1</span> || n === <span class="number">2</span>) &#123;　　　　<span class="comment">//判断n==1或2的情况下返回undefined</span></span><br><span class="line">        <span class="keyword">return</span> one;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> three;　　　　　　　<span class="comment">//最后返回three</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fibonacci2</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n === <span class="number">1</span> || n === <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fibonacci2(n - <span class="number">1</span>) + fibonacci2(n - <span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'start 1'</span>)</span><br><span class="line"><span class="built_in">console</span>.time(<span class="string">"fibo"</span>)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">1000000</span>; i++) &#123;</span><br><span class="line">    fibonacci(<span class="number">50</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.timeEnd(<span class="string">"fibo"</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'start 2'</span>)</span><br><span class="line"><span class="built_in">console</span>.time(<span class="string">"fibo2"</span>)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">    fibonacci2(<span class="number">30</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.timeEnd(<span class="string">"fibo2"</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'11'</span>, fibonacci(<span class="number">30</span>))</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'22'</span>, fibonacci2(<span class="number">30</span>))</span><br></pre></td></tr></table></figure><ul><li>nodejs运行结果：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">test begin</span><br><span class="line">start 1</span><br><span class="line">fibo: 57.954ms</span><br><span class="line">start 2</span><br><span class="line">fibo2: 833.642ms</span><br><span class="line">11 832040</span><br><span class="line">22 832040</span><br></pre></td></tr></table></figure><hr><h4 id="go-and-c"><a href="#go-and-c" class="headerlink" title="go and c"></a>go and c</h4><ul><li>版本</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">go version</span><br><span class="line">go version go1.13.1 windows/amd64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gcc --version</span><br><span class="line">gcc (tdm64-1) 5.1.0</span><br><span class="line">Copyright (C) 2015 Free Software Foundation, Inc.</span><br><span class="line">This is free software; see the source for copying conditions.  There is NO</span><br><span class="line">warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span><br></pre></td></tr></table></figure><ul><li>测试代码</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">int cfibo(int n)&#123;</span></span><br><span class="line"><span class="comment">int one = 1;</span></span><br><span class="line"><span class="comment">int two = 1;</span></span><br><span class="line"><span class="comment">int three = 0;</span></span><br><span class="line"><span class="comment">for(int i=3;i&lt;=n;i++)&#123;</span></span><br><span class="line"><span class="comment">three = one+two;</span></span><br><span class="line"><span class="comment">one = two;</span></span><br><span class="line"><span class="comment">two = three;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">if(n==1||n==2)&#123;</span></span><br><span class="line"><span class="comment">return one;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">return three;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">int cfibo2(int n)&#123;</span></span><br><span class="line"><span class="comment">    if (n == 1 || n == 2) &#123;</span></span><br><span class="line"><span class="comment">        return 1;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">return cfibo2(n - 1) + cfibo2(n - 2);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">void testcfibo()&#123;</span></span><br><span class="line"><span class="comment">for (int i = 0; i &lt; 1000000; i++) &#123;</span></span><br><span class="line"><span class="comment">cfibo(50);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">void testcfibo2()&#123;</span></span><br><span class="line"><span class="comment">for (int i = 0; i &lt; 100; i++) &#123;</span></span><br><span class="line"><span class="comment">cfibo2(30);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">"C"</span></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"start 1"</span>)</span><br><span class="line">t1 := time.Now()</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">1000000</span>; i++ &#123;</span><br><span class="line">fibo(<span class="number">50</span>)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"fibo:"</span>, time.Now().Sub(t1))</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"start 2"</span>)</span><br><span class="line">t1 = time.Now()</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">100</span>; i++ &#123;</span><br><span class="line">fibo2(<span class="number">30</span>)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"fibo2:"</span>, time.Now().Sub(t1))</span><br><span class="line">fmt.Println(<span class="string">"11"</span>, fibo(<span class="number">30</span>))</span><br><span class="line">fmt.Println(<span class="string">"22"</span>, fibo2(<span class="number">30</span>))</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"c start 1"</span>)</span><br><span class="line">t1 = time.Now()</span><br><span class="line">C.testcfibo()</span><br><span class="line">fmt.Println(<span class="string">"cfibo:"</span>, time.Now().Sub(t1))</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"c start 2"</span>)</span><br><span class="line">t1 = time.Now()</span><br><span class="line">C.testcfibo2()</span><br><span class="line">fmt.Println(<span class="string">"cfibo2:"</span>, time.Now().Sub(t1))</span><br><span class="line">fmt.Println(<span class="string">"11"</span>, C.cfibo(<span class="number">30</span>))</span><br><span class="line">fmt.Println(<span class="string">"22"</span>, C.cfibo2(<span class="number">30</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fibo</span><span class="params">(n <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">one := <span class="number">1</span></span><br><span class="line">two := <span class="number">1</span></span><br><span class="line">three := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">3</span>; i &lt;= n; i++ &#123;</span><br><span class="line">three = one + two</span><br><span class="line">one = two</span><br><span class="line">two = three</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> n == <span class="number">1</span> || n == <span class="number">2</span> &#123;</span><br><span class="line"><span class="keyword">return</span> one</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> three</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fibo2</span><span class="params">(n <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> n == <span class="number">1</span> || n == <span class="number">2</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> fibo2(n<span class="number">-1</span>) + fibo2(n<span class="number">-2</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>编译命令</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go build -ldflags="-s -w" testfibo.go</span><br></pre></td></tr></table></figure><ul><li>go and c 运行结果：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">start 1</span><br><span class="line">fibo: 30.0017ms</span><br><span class="line">start 2</span><br><span class="line">fibo2: 422.0242ms</span><br><span class="line">11 832040</span><br><span class="line">22 832040</span><br><span class="line">c start 1</span><br><span class="line">cfibo: 0s</span><br><span class="line">c start 2</span><br><span class="line">cfibo2: 199.0114ms</span><br><span class="line">11 832040</span><br><span class="line">22 832040</span><br></pre></td></tr></table></figure><hr><h4 id="csharp"><a href="#csharp" class="headerlink" title="csharp"></a>csharp</h4><ul><li>版本</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dotnet --version</span><br><span class="line">3.0.100</span><br></pre></td></tr></table></figure><ul><li>测试代码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line"></span><br><span class="line">namespace testdot</span><br><span class="line">&#123;</span><br><span class="line">    class Fibo</span><br><span class="line">    &#123;</span><br><span class="line">        public static int fibo(int n)</span><br><span class="line">        &#123;</span><br><span class="line">            var one = 1;</span><br><span class="line">            var two = 1;</span><br><span class="line">            var three = 0;</span><br><span class="line">            for (var i = 3; i &lt;= n; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                three = one + two;</span><br><span class="line">                one = two;</span><br><span class="line">                two = three;</span><br><span class="line">            &#125;</span><br><span class="line">            if (n == 1 || n == 2)</span><br><span class="line">            &#123;</span><br><span class="line">                return one;</span><br><span class="line">            &#125;</span><br><span class="line">            return three;</span><br><span class="line">        &#125;</span><br><span class="line">        public static int fibo2(int n)</span><br><span class="line">        &#123;</span><br><span class="line">            if (n == 1 || n == 2)</span><br><span class="line">            &#123;</span><br><span class="line">                return 1;</span><br><span class="line">            &#125;</span><br><span class="line">            return fibo2(n - 1) + fibo2(n - 2);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    class Program</span><br><span class="line">    &#123;</span><br><span class="line">        static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(&quot;start 1&quot;);</span><br><span class="line">            var t = DateTime.Now;</span><br><span class="line">            for (var i = 0; i &lt; 1000000; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Fibo.fibo(50);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(&quot;fibo &#123;0&#125;&quot;, (DateTime.Now - t).Milliseconds);</span><br><span class="line">            Console.WriteLine(&quot;start 2&quot;);</span><br><span class="line">            t = DateTime.Now;</span><br><span class="line">            for (var i = 0; i &lt; 100; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Fibo.fibo2(30);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(&quot;fibo2 &#123;0&#125;&quot;, (DateTime.Now - t).Milliseconds);</span><br><span class="line">            Console.WriteLine(&quot;11 &#123;0&#125;&quot;, Fibo.fibo(30));</span><br><span class="line">            Console.WriteLine(&quot;22 &#123;0&#125;&quot;, Fibo.fibo2(30));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>编译命令</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet publish -c Release</span><br></pre></td></tr></table></figure><ul><li>运行结果</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">start 1</span><br><span class="line">fibo 41</span><br><span class="line">start 2</span><br><span class="line">fibo2 443</span><br><span class="line">11 832040</span><br><span class="line">22 832040</span><br></pre></td></tr></table></figure><hr><h2 id="Results"><a href="#Results" class="headerlink" title="Results"></a>Results</h2><p>测试结果只是做为一个参考。</p><p>测试结果不一定准确，主要注重的是代码执行效率。</p><p>尤其是c部分的测试，用的是cgo。</p><table><thead><tr><th></th><th>nodejs</th><th>go</th><th>c</th><th>csharp</th></tr></thead><tbody><tr><td>fibo</td><td>57.954ms</td><td>30.0017ms</td><td>0s</td><td>41ms</td></tr><tr><td>fibo2</td><td>833.642ms</td><td>422.0242ms</td><td>199.0114ms</td><td>443ms</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;斐波那契数列-百度百科&quot;&gt;&lt;a href=&quot;#斐波那契数列-百度百科&quot; class=&quot;headerlink&quot; title=&quot;斐波那契数列 (百度百科)&quot;&gt;&lt;/a&gt;斐波那契数列 (百度百科)&lt;/h3&gt;&lt;p&gt;斐波那契数列（Fibonacci sequence），又称&lt;
      
    
    </summary>
    
      <category term="nodejs" scheme="https://smallwhite.ml/categories/nodejs/"/>
    
    
      <category term="nodejs" scheme="https://smallwhite.ml/tags/nodejs/"/>
    
      <category term="go" scheme="https://smallwhite.ml/tags/go/"/>
    
      <category term="csharp" scheme="https://smallwhite.ml/tags/csharp/"/>
    
  </entry>
  
  <entry>
    <title>简单方法管理go多版本</title>
    <link href="https://smallwhite.ml/pub/go/multi-go-version.html"/>
    <id>https://smallwhite.ml/pub/go/multi-go-version.html</id>
    <published>2019-09-07T14:57:11.000Z</published>
    <updated>2020-11-18T03:13:32.674Z</updated>
    
    <content type="html"><![CDATA[<p>官方文档上的方法</p><p><a href="https://golang.org/doc/install#extra_versions" target="_blank" rel="noopener">https://golang.org/doc/install#extra_versions</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Installing extra Go versions</span><br><span class="line">It may be useful to have multiple Go versions installed on the same machine, for example, to ensure that a package&apos;s tests pass on multiple Go versions. Once you have one Go version installed, you can install another (such as 1.10.7) as follows:</span><br><span class="line"></span><br><span class="line">$ go get golang.org/dl/go1.10.7</span><br><span class="line">$ go1.10.7 download</span><br><span class="line">The newly downloaded version can be used like go:</span><br><span class="line"></span><br><span class="line">$ go1.10.7 version</span><br><span class="line">go version go1.10.7 linux/amd64</span><br><span class="line">All Go versions available via this method are listed on the download page. You can find where each of these extra Go versions is installed by looking at its GOROOT; for example, go1.10.7 env GOROOT. To uninstall a downloaded version, just remove its GOROOT directory and the goX.Y.Z binary.</span><br></pre></td></tr></table></figure><p>先下载对应版本的管理器<br><code>go get golang.org/dl/go1.10.7</code></p><p>再下载<br><code>go1.10.7 download</code></p><p>1.10.7 替换成你要的版本</p><p>各种版本号在这里找<br><a href="https://golang.org/dl/" target="_blank" rel="noopener">https://golang.org/dl/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;官方文档上的方法&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://golang.org/doc/install#extra_versions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://golang.org/doc/install#ext
      
    
    </summary>
    
      <category term="go" scheme="https://smallwhite.ml/categories/go/"/>
    
    
      <category term="go" scheme="https://smallwhite.ml/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>docker 突然不能被外网访问</title>
    <link href="https://smallwhite.ml/pub/docker/docker-cannot-access-by-external.html"/>
    <id>https://smallwhite.ml/pub/docker/docker-cannot-access-by-external.html</id>
    <published>2019-08-19T03:20:00.000Z</published>
    <updated>2020-11-18T03:13:32.674Z</updated>
    
    <content type="html"><![CDATA[<p>参考文章1: <a href="https://www.cnblogs.com/yudongdong/p/10984246.html" target="_blank" rel="noopener">https://www.cnblogs.com/yudongdong/p/10984246.html</a><br>参考文章2: <a href="https://www.cnblogs.com/zl1991/p/10531726.html" target="_blank" rel="noopener">https://www.cnblogs.com/zl1991/p/10531726.html</a></p><p>根据大佬们的方法，找到了原因  <code>sysctl net.ipv4.ip_forward</code>.  腾讯云提示修复漏洞，执行完他们的脚本， ip转发就被关掉了。</p><p>后来研究了一下，可以通过 <code>docker info</code> 找到问题所在。<br>并且可以查看到docker给出一警告</p><p>解决方法：</p><p><code>sudo vim /etc/sysctl.conf</code> 修改 ，保存 , 然后  <code>systemctl restart network</code> </p><p>或者</p><p><code>sysctl -w net.ipv4.ip_forward=1</code><br>但是这样处理可能服务器重启以后就失效了？ </p><p>还有两个警告，一起处理一下就好了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WARNING: bridge-nf-call-iptables is disabled</span><br><span class="line">WARNING: bridge-nf-call-ip6tables is disabled</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;参考文章1: &lt;a href=&quot;https://www.cnblogs.com/yudongdong/p/10984246.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/yudongdong/p/1
      
    
    </summary>
    
      <category term="docker" scheme="https://smallwhite.ml/categories/docker/"/>
    
    
      <category term="docker" scheme="https://smallwhite.ml/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>nodejs和js里的gbk与utf8编码转换</title>
    <link href="https://smallwhite.ml/pub/nodejs/nodejs-js-gbk-utf8-encode.html"/>
    <id>https://smallwhite.ml/pub/nodejs/nodejs-js-gbk-utf8-encode.html</id>
    <published>2019-06-21T11:36:33.000Z</published>
    <updated>2020-11-18T03:13:32.670Z</updated>
    
    <content type="html"><![CDATA[<h3 id="nodejs和js里的gbk与utf8编码转换"><a href="#nodejs和js里的gbk与utf8编码转换" class="headerlink" title="nodejs和js里的gbk与utf8编码转换"></a>nodejs和js里的gbk与utf8编码转换</h3><h5 id="js-与-nodejs-都有-TextEncoder-TextDecoder-，可以进行编码之间的转换"><a href="#js-与-nodejs-都有-TextEncoder-TextDecoder-，可以进行编码之间的转换" class="headerlink" title="js 与 nodejs 都有  TextEncoder TextDecoder ，可以进行编码之间的转换"></a>js 与 nodejs 都有  <code>TextEncoder</code> <code>TextDecoder</code> ，可以进行编码之间的转换</h5><blockquote><p>nodejs 版本需要 &gt;=8.3.0 才支持    <a href="https://nodejs.org/api/util.html#util_class_util_textdecoder" target="_blank" rel="noopener">util.TextEncoder,util.TextDecoder </a></p></blockquote><blockquote><p>gbk 转 utf8</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">new TextDecoder(&apos;gbk&apos;).decode(new Uint8Array([ 47, 63, 214, 208, 206, 196, 61, 56, 56 ]).buffer)</span><br><span class="line">// out:  &quot;/?中文=88&quot;</span><br></pre></td></tr></table></figure><h5 id="nodejs-建议通过-iconv-or-iconv-lite第三方库进行编码之间的转换。因为使用原生-TextEncoder需要完整的-ICU-Data-具体看这里-util-class-util-textdecoder"><a href="#nodejs-建议通过-iconv-or-iconv-lite第三方库进行编码之间的转换。因为使用原生-TextEncoder需要完整的-ICU-Data-具体看这里-util-class-util-textdecoder" class="headerlink" title="nodejs 建议通过 iconv  or iconv-lite第三方库进行编码之间的转换。因为使用原生 TextEncoder需要完整的 ICU Data 具体看这里  util_class_util_textdecoder"></a>nodejs 建议通过 <a href="https://www.npmjs.com/package/iconv" target="_blank" rel="noopener">iconv</a>  or <a href="https://www.npmjs.com/package/iconv-lite" target="_blank" rel="noopener">iconv-lite</a>第三方库进行编码之间的转换。因为使用原生 TextEncoder需要完整的 ICU Data 具体看这里  <a href="https://nodejs.org/dist/latest-v10.x/docs/api/util.html#util_class_util_textdecoder" target="_blank" rel="noopener">util_class_util_textdecoder</a></h5><blockquote><p>utf8   gbk 互转</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">let iconv = require(&apos;iconv-lite&apos;);</span><br><span class="line">// 这里是utf8</span><br><span class="line">let str = &apos;/?中文=88&apos;;</span><br><span class="line">// 转换成gbk</span><br><span class="line">let encoded = iconv.encode(str, &apos;gbk&apos;);</span><br><span class="line">console.log(encoded,encoded.toJSON())</span><br><span class="line"></span><br><span class="line">str = iconv.decode(Buffer.from([ 47, 63, 214, 208, 206, 196, 61, 56, 56 ]), &apos;gbk&apos;);</span><br><span class="line">console.log(&apos;utf8 str:&apos;,str)</span><br><span class="line"></span><br><span class="line">// out: Buffer &lt;2F, 3F, D6, D0, CE, C4, 3D, 38, 38&gt;</span><br><span class="line">// Object &#123;data: [47, 63, 214, 208, 206, 196, 61, 56, 56], type: &quot;Buffer&quot;&#125;</span><br><span class="line">// utf8 str: &quot;/?中文=88&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;nodejs和js里的gbk与utf8编码转换&quot;&gt;&lt;a href=&quot;#nodejs和js里的gbk与utf8编码转换&quot; class=&quot;headerlink&quot; title=&quot;nodejs和js里的gbk与utf8编码转换&quot;&gt;&lt;/a&gt;nodejs和js里的gbk与ut
      
    
    </summary>
    
      <category term="nodejs" scheme="https://smallwhite.ml/categories/nodejs/"/>
    
    
      <category term="nodejs" scheme="https://smallwhite.ml/tags/nodejs/"/>
    
      <category term="javascript" scheme="https://smallwhite.ml/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>idea license code</title>
    <link href="https://smallwhite.ml/pub/ide/jetbrain-idea-license.html"/>
    <id>https://smallwhite.ml/pub/ide/jetbrain-idea-license.html</id>
    <published>2019-05-05T02:22:32.000Z</published>
    <updated>2020-11-18T03:13:32.670Z</updated>
    
    <content type="html"><![CDATA[<h1 id="激活码激活，可以激活最新的2019-1，但是需要修改hosts。"><a href="#激活码激活，可以激活最新的2019-1，但是需要修改hosts。" class="headerlink" title="激活码激活，可以激活最新的2019.1，但是需要修改hosts。"></a>激活码激活，可以激活最新的2019.1，但是需要修改hosts。</h1><h2 id="第一步先修改-hosts"><a href="#第一步先修改-hosts" class="headerlink" title="第一步先修改 hosts"></a>第一步先修改 hosts</h2><p>hosts 添加这几行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0.0.0.0 account.jetbrains.com</span><br><span class="line">0.0.0.0 www.jetbrains.com</span><br><span class="line">0.0.0.0 www-weighted.jetbrains.com</span><br><span class="line">0.0.0.0 entry.prod-eu.w3jbcom.aws.intellij.net</span><br></pre></td></tr></table></figure><p>windows: </p><p><code>C:\Windows\System32\drivers\etc\hosts</code></p><p>Linux/Mac:</p><p><code>/etc/hosts</code></p><p>有的电脑可能要重启才能生效</p><p>判断是否生效可以通过 cmd ping ,或者 浏览器打开网址测试一下。</p><h2 id="输入激活码-Activation-code-，可以随便选一个："><a href="#输入激活码-Activation-code-，可以随便选一个：" class="headerlink" title="输入激活码(Activation code)，可以随便选一个："></a>输入激活码(Activation code)，可以随便选一个：</h2><p>Valid until Jan-08-2020:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">N757JE0KCT-eyJsaWNlbnNlSWQiOiJONzU3SkUwS0NUIiwibGljZW5zZWVOYW1lIjoid3UgYW5qdW4iLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiRm9yIGVkdWNhdGlvbmFsIHVzZSBvbmx5IiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJJSSIsInBhaWRVcFRvIjoiMjAyMC0wMS0wNyJ9LHsiY29kZSI6IkFDIiwicGFpZFVwVG8iOiIyMDIwLTAxLTA3In0seyJjb2RlIjoiRFBOIiwicGFpZFVwVG8iOiIyMDIwLTAxLTA3In0seyJjb2RlIjoiUFMiLCJwYWlkVXBUbyI6IjIwMjAtMDEtMDcifSx7ImNvZGUiOiJHTyIsInBhaWRVcFRvIjoiMjAyMC0wMS0wNyJ9LHsiY29kZSI6IkRNIiwicGFpZFVwVG8iOiIyMDIwLTAxLTA3In0seyJjb2RlIjoiQ0wiLCJwYWlkVXBUbyI6IjIwMjAtMDEtMDcifSx7ImNvZGUiOiJSUzAiLCJwYWlkVXBUbyI6IjIwMjAtMDEtMDcifSx7ImNvZGUiOiJSQyIsInBhaWRVcFRvIjoiMjAyMC0wMS0wNyJ9LHsiY29kZSI6IlJEIiwicGFpZFVwVG8iOiIyMDIwLTAxLTA3In0seyJjb2RlIjoiUEMiLCJwYWlkVXBUbyI6IjIwMjAtMDEtMDcifSx7ImNvZGUiOiJSTSIsInBhaWRVcFRvIjoiMjAyMC0wMS0wNyJ9LHsiY29kZSI6IldTIiwicGFpZFVwVG8iOiIyMDIwLTAxLTA3In0seyJjb2RlIjoiREIiLCJwYWlkVXBUbyI6IjIwMjAtMDEtMDcifSx7ImNvZGUiOiJEQyIsInBhaWRVcFRvIjoiMjAyMC0wMS0wNyJ9LHsiY29kZSI6IlJTVSIsInBhaWRVcFRvIjoiMjAyMC0wMS0wNyJ9XSwiaGFzaCI6IjExNTE5OTc4LzAiLCJncmFjZVBlcmlvZERheXMiOjAsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0=-AE3x5sRpDellY4SmQVy2Pfc2IT7y1JjZFmDA5JtOv4K5gwVdJOLw5YGiOskZTuGu6JhOi50nnd0WaaNZIuVVVx3T5MlXrAuO3kb2qPtLtQ6/n3lp4fIv+6384D4ciEyRWijG7NA9exQx39Tjk7/xqaGk7ooKgq5yquIfIA+r4jlbW8j9gas1qy3uTGUuZQiPB4lv3P5OIpZzIoWXnFwWhy7s//mjOWRZdf/Du3RP518tMk74wizbTeDn84qxbM+giNAn+ovKQRMYHtLyxntBiP5ByzfAA9Baa5TUGW5wDiZrxFuvBAWTbLrRI0Kd7Nb/tB9n1V9uluB2WWIm7iMxDg==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+2h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn/72W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+9zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN/lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D/cXmgpOyW/1SmBz3XjVIi/zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV/bZOl8KqJBETCDJcY6O2aqhTUy+9x93ThKs1GKrRPePrWPluud7ttlgtRveit/pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow==</span><br></pre></td></tr></table></figure><p>Valid until Mar-11-2020:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">56ZS5PQ1RF-eyJsaWNlbnNlSWQiOiI1NlpTNVBRMVJGIiwibGljZW5zZWVOYW1lIjoi5q2j54mI5o6I5p2DIC4iLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiRm9yIGVkdWNhdGlvbmFsIHVzZSBvbmx5IiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJJSSIsInBhaWRVcFRvIjoiMjAyMC0wMy0xMCJ9LHsiY29kZSI6IkFDIiwicGFpZFVwVG8iOiIyMDIwLTAzLTEwIn0seyJjb2RlIjoiRFBOIiwicGFpZFVwVG8iOiIyMDIwLTAzLTEwIn0seyJjb2RlIjoiUFMiLCJwYWlkVXBUbyI6IjIwMjAtMDMtMTAifSx7ImNvZGUiOiJHTyIsInBhaWRVcFRvIjoiMjAyMC0wMy0xMCJ9LHsiY29kZSI6IkRNIiwicGFpZFVwVG8iOiIyMDIwLTAzLTEwIn0seyJjb2RlIjoiQ0wiLCJwYWlkVXBUbyI6IjIwMjAtMDMtMTAifSx7ImNvZGUiOiJSUzAiLCJwYWlkVXBUbyI6IjIwMjAtMDMtMTAifSx7ImNvZGUiOiJSQyIsInBhaWRVcFRvIjoiMjAyMC0wMy0xMCJ9LHsiY29kZSI6IlJEIiwicGFpZFVwVG8iOiIyMDIwLTAzLTEwIn0seyJjb2RlIjoiUEMiLCJwYWlkVXBUbyI6IjIwMjAtMDMtMTAifSx7ImNvZGUiOiJSTSIsInBhaWRVcFRvIjoiMjAyMC0wMy0xMCJ9LHsiY29kZSI6IldTIiwicGFpZFVwVG8iOiIyMDIwLTAzLTEwIn0seyJjb2RlIjoiREIiLCJwYWlkVXBUbyI6IjIwMjAtMDMtMTAifSx7ImNvZGUiOiJEQyIsInBhaWRVcFRvIjoiMjAyMC0wMy0xMCJ9LHsiY29kZSI6IlJTVSIsInBhaWRVcFRvIjoiMjAyMC0wMy0xMCJ9XSwiaGFzaCI6IjEyMjkxNDk4LzAiLCJncmFjZVBlcmlvZERheXMiOjAsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0=-SYSsDcgL1WJmHnsiGaHUWbaZLPIe2oI3QiIneDtaIbh/SZOqu63G7RGudSjf3ssPb1zxroMti/bK9II1ugHz/nTjw31Uah7D0HqeaCO7Zc0q9BeHysiWmBZ+8bABs5vr25GgIa5pO7CJhL7RitXQbWpAajrMBAeZ2En3wCgNwT6D6hNmiMlhXsWgwkw2OKnyHZ2dl8yEL+oV5SW14t7bdjYGKQrYjSd4+2zc4FnaX88yLnGNO9B3U6G+BuM37pxS5MjHrkHqMTK8W3I66mIj6IB6dYXD5nvKKO1OZREBAr6LV0BqRYSbuJKFhZ8nd6YDG20GvW6leimv0rHVBFmA0w==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+2h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn/72W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+9zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN/lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D/cXmgpOyW/1SmBz3XjVIi/zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV/bZOl8KqJBETCDJcY6O2aqhTUy+9x93ThKs1GKrRPePrWPluud7ttlgtRveit/pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow==</span><br></pre></td></tr></table></figure><p>another1:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">K03CHKJCFT-eyJsaWNlbnNlSWQiOiJLMDNDSEtKQ0ZUIiwibGljZW5zZWVOYW1lIjoibnNzIDEwMDEiLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiRm9yIGVkdWNhdGlvbmFsIHVzZSBvbmx5IiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJJSSIsInBhaWRVcFRvIjoiMjAxOS0wNC0yNSJ9LHsiY29kZSI6IlJTMCIsInBhaWRVcFRvIjoiMjAxOS0wNC0yNSJ9LHsiY29kZSI6IldTIiwicGFpZFVwVG8iOiIyMDE5LTA0LTI1In0seyJjb2RlIjoiUkQiLCJwYWlkVXBUbyI6IjIwMTktMDQtMjUifSx7ImNvZGUiOiJSQyIsInBhaWRVcFRvIjoiMjAxOS0wNC0yNSJ9LHsiY29kZSI6IkRDIiwicGFpZFVwVG8iOiIyMDE5LTA0LTI1In0seyJjb2RlIjoiREIiLCJwYWlkVXBUbyI6IjIwMTktMDQtMjUifSx7ImNvZGUiOiJSTSIsInBhaWRVcFRvIjoiMjAxOS0wNC0yNSJ9LHsiY29kZSI6IkRNIiwicGFpZFVwVG8iOiIyMDE5LTA0LTI1In0seyJjb2RlIjoiQUMiLCJwYWlkVXBUbyI6IjIwMTktMDQtMjUifSx7ImNvZGUiOiJEUE4iLCJwYWlkVXBUbyI6IjIwMTktMDQtMjUifSx7ImNvZGUiOiJHTyIsInBhaWRVcFRvIjoiMjAxOS0wNC0yNSJ9LHsiY29kZSI6IlBTIiwicGFpZFVwVG8iOiIyMDE5LTA0LTI1In0seyJjb2RlIjoiQ0wiLCJwYWlkVXBUbyI6IjIwMTktMDQtMjUifSx7ImNvZGUiOiJQQyIsInBhaWRVcFRvIjoiMjAxOS0wNC0yNSJ9LHsiY29kZSI6IlJTVSIsInBhaWRVcFRvIjoiMjAxOS0wNC0yNSJ9XSwiaGFzaCI6Ijg4MjUwMTQvMCIsImdyYWNlUGVyaW9kRGF5cyI6MCwiYXV0b1Byb2xvbmdhdGVkIjpmYWxzZSwiaXNBdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlfQ==-IJBDUuZMqhMJZfuM8Pgz1WXDRP3k9sKMJXuGdnbwoYDN4Y2G5Xmpw05GZUeESnh2/wzVxTHF4+PQ5ewk+J66F15b50VHSNxFI9XKWatoDfBc9EA1CddWqAU5CaipdMkSHoUDbT69PPGU4Vsfo1HTFv50tQ7RFVYMDbmVhw6mUbTFMvGiu5CZTuEVkmJ+1KpfuyQZvXjS1hXhfbK/xmpMG2/xRmK9lxW9PafZU1dWxqjYU8QBlUYgjdDsDS2apSTE+xFF6y3ZKK/YThpC7IYt5HR5Cc3VGjdb/H7jEAkH2/Uz0PrixPc3Bk5tU01rhxI4Z5VbmmWzGAhWWBtQEqU17A==-MIIEPjCCAiagAwIBAgIBBTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE1MTEwMjA4MjE0OFoXDTE4MTEwMTA4MjE0OFowETEPMA0GA1UEAwwGcHJvZDN5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQC9WZuYgQedSuOc5TOUSrRigMw4/+wuC5EtZBfvdl4HT/8vzMW/oUlIP4YCvA0XKyBaCJ2iX+ZCDKoPfiYXiaSiH+HxAPV6J79vvouxKrWg2XV6ShFtPLP+0gPdGq3x9R3+kJbmAm8w+FOdlWqAfJrLvpzMGNeDU14YGXiZ9bVzmIQbwrBA+c/F4tlK/DV07dsNExihqFoibnqDiVNTGombaU2dDup2gwKdL81ua8EIcGNExHe82kjF4zwfadHk3bQVvbfdAwxcDy4xBjs3L4raPLU3yenSzr/OEur1+jfOxnQSmEcMXKXgrAQ9U55gwjcOFKrgOxEdek/Sk1VfOjvS+nuM4eyEruFMfaZHzoQiuw4IqgGc45ohFH0UUyjYcuFxxDSU9lMCv8qdHKm+wnPRb0l9l5vXsCBDuhAGYD6ss+Ga+aDY6f/qXZuUCEUOH3QUNbbCUlviSz6+GiRnt1kA9N2Qachl+2yBfaqUqr8h7Z2gsx5LcIf5kYNsqJ0GavXTVyWh7PYiKX4bs354ZQLUwwa/cG++2+wNWP+HtBhVxMRNTdVhSm38AknZlD+PTAsWGu9GyLmhti2EnVwGybSD2Dxmhxk3IPCkhKAK+pl0eWYGZWG3tJ9mZ7SowcXLWDFAk0lRJnKGFMTggrWjV8GYpw5bq23VmIqqDLgkNzuoog==</span><br></pre></td></tr></table></figure><p>another2:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">K71U8DBPNE-eyJsaWNlbnNlSWQiOiJLNzFVOERCUE5FIiwibGljZW5zZWVOYW1lIjoibGFuIHl1IiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMTktMDUtMDQifSx7ImNvZGUiOiJSUzAiLCJwYWlkVXBUbyI6IjIwMTktMDUtMDQifSx7ImNvZGUiOiJXUyIsInBhaWRVcFRvIjoiMjAxOS0wNS0wNCJ9LHsiY29kZSI6IlJEIiwicGFpZFVwVG8iOiIyMDE5LTA1LTA0In0seyJjb2RlIjoiUkMiLCJwYWlkVXBUbyI6IjIwMTktMDUtMDQifSx7ImNvZGUiOiJEQyIsInBhaWRVcFRvIjoiMjAxOS0wNS0wNCJ9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDE5LTA1LTA0In0seyJjb2RlIjoiUk0iLCJwYWlkVXBUbyI6IjIwMTktMDUtMDQifSx7ImNvZGUiOiJETSIsInBhaWRVcFRvIjoiMjAxOS0wNS0wNCJ9LHsiY29kZSI6IkFDIiwicGFpZFVwVG8iOiIyMDE5LTA1LTA0In0seyJjb2RlIjoiRFBOIiwicGFpZFVwVG8iOiIyMDE5LTA1LTA0In0seyJjb2RlIjoiR08iLCJwYWlkVXBUbyI6IjIwMTktMDUtMDQifSx7ImNvZGUiOiJQUyIsInBhaWRVcFRvIjoiMjAxOS0wNS0wNCJ9LHsiY29kZSI6IkNMIiwicGFpZFVwVG8iOiIyMDE5LTA1LTA0In0seyJjb2RlIjoiUEMiLCJwYWlkVXBUbyI6IjIwMTktMDUtMDQifSx7ImNvZGUiOiJSU1UiLCJwYWlkVXBUbyI6IjIwMTktMDUtMDQifV0sImhhc2giOiI4OTA4Mjg5LzAiLCJncmFjZVBlcmlvZERheXMiOjAsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0=-Owt3/+LdCpedvF0eQ8635yYt0+ZLtCfIHOKzSrx5hBtbKGYRPFDrdgQAK6lJjexl2emLBcUq729K1+ukY9Js0nx1NH09l9Rw4c7k9wUksLl6RWx7Hcdcma1AHolfSp79NynSMZzQQLFohNyjD+dXfXM5GYd2OTHya0zYjTNMmAJuuRsapJMP9F1z7UTpMpLMxS/JaCWdyX6qIs+funJdPF7bjzYAQBvtbz+6SANBgN36gG1B2xHhccTn6WE8vagwwSNuM70egpahcTktoHxI7uS1JGN9gKAr6nbp+8DbFz3a2wd+XoF3nSJb/d2f/6zJR8yJF8AOyb30kwg3zf5cWw==-MIIEPjCCAiagAwIBAgIBBTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE1MTEwMjA4MjE0OFoXDTE4MTEwMTA4MjE0OFowETEPMA0GA1UEAwwGcHJvZDN5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQC9WZuYgQedSuOc5TOUSrRigMw4/+wuC5EtZBfvdl4HT/8vzMW/oUlIP4YCvA0XKyBaCJ2iX+ZCDKoPfiYXiaSiH+HxAPV6J79vvouxKrWg2XV6ShFtPLP+0gPdGq3x9R3+kJbmAm8w+FOdlWqAfJrLvpzMGNeDU14YGXiZ9bVzmIQbwrBA+c/F4tlK/DV07dsNExihqFoibnqDiVNTGombaU2dDup2gwKdL81ua8EIcGNExHe82kjF4zwfadHk3bQVvbfdAwxcDy4xBjs3L4raPLU3yenSzr/OEur1+jfOxnQSmEcMXKXgrAQ9U55gwjcOFKrgOxEdek/Sk1VfOjvS+nuM4eyEruFMfaZHzoQiuw4IqgGc45ohFH0UUyjYcuFxxDSU9lMCv8qdHKm+wnPRb0l9l5vXsCBDuhAGYD6ss+Ga+aDY6f/qXZuUCEUOH3QUNbbCUlviSz6+GiRnt1kA9N2Qachl+2yBfaqUqr8h7Z2gsx5LcIf5kYNsqJ0GavXTVyWh7PYiKX4bs354ZQLUwwa/cG++2+wNWP+HtBhVxMRNTdVhSm38AknZlD+PTAsWGu9GyLmhti2EnVwGybSD2Dxmhxk3IPCkhKAK+pl0eWYGZWG3tJ9mZ7SowcXLWDFAk0lRJnKGFMTggrWjV8GYpw5bq23VmIqqDLgkNzuoog==</span><br></pre></td></tr></table></figure><p>another3:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BTBV1R0CZR-eyJsaWNlbnNlSWQiOiJCVEJWMVIwQ1pSIiwibGljZW5zZWVOYW1lIjoiTXVzaGZpcXVyIFJhaG1hbiIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiJGb3IgZWR1Y2F0aW9uYWwgdXNlIG9ubHkiLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IklJIiwicGFpZFVwVG8iOiIyMDE5LTExLTI4In0seyJjb2RlIjoiQUMiLCJwYWlkVXBUbyI6IjIwMTktMTEtMjgifSx7ImNvZGUiOiJEUE4iLCJwYWlkVXBUbyI6IjIwMTktMTEtMjgifSx7ImNvZGUiOiJQUyIsInBhaWRVcFRvIjoiMjAxOS0xMS0yOCJ9LHsiY29kZSI6IkdPIiwicGFpZFVwVG8iOiIyMDE5LTExLTI4In0seyJjb2RlIjoiRE0iLCJwYWlkVXBUbyI6IjIwMTktMTEtMjgifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAxOS0xMS0yOCJ9LHsiY29kZSI6IlJTMCIsInBhaWRVcFRvIjoiMjAxOS0xMS0yOCJ9LHsiY29kZSI6IlJDIiwicGFpZFVwVG8iOiIyMDE5LTExLTI4In0seyJjb2RlIjoiUkQiLCJwYWlkVXBUbyI6IjIwMTktMTEtMjgifSx7ImNvZGUiOiJQQyIsInBhaWRVcFRvIjoiMjAxOS0xMS0yOCJ9LHsiY29kZSI6IlJNIiwicGFpZFVwVG8iOiIyMDE5LTExLTI4In0seyJjb2RlIjoiV1MiLCJwYWlkVXBUbyI6IjIwMTktMTEtMjgifSx7ImNvZGUiOiJEQiIsInBhaWRVcFRvIjoiMjAxOS0xMS0yOCJ9LHsiY29kZSI6IkRDIiwicGFpZFVwVG8iOiIyMDE5LTExLTI4In0seyJjb2RlIjoiUlNVIiwicGFpZFVwVG8iOiIyMDE5LTExLTI4In1dLCJoYXNoIjoiMTEwODc1NDYvMCIsImdyYWNlUGVyaW9kRGF5cyI6MCwiYXV0b1Byb2xvbmdhdGVkIjpmYWxzZSwiaXNBdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlfQ==-wQ6zKQMYh4XcZ+Rq3FkZCo9kJe9iJYoD1+cxAhVr1oiKOA0ANleB1AiBwlpeIuq6IH9v+Xt3mfONBboolQtbCsSjSuOwphPVP77sK4dzR4Bp5h0IMTlYLTSfYx484VhhuYr74VQT/90iXfKb8E/mFqJZKQQIXOXjfPPeqPsrOToxuXVIbW/i6Sp6Y6bSBYKJp1xtxTxWb/tBn/5zKK5seWS6cb/pttMFXQIFKjma6HXGxNgAlpC5hz20rH3+z4/ltns3ve4rlFn0QtHkBBRqm1G6HKTQkIg/h1cw8aVq0GIGYG6Hol5SNK0wzMB5CTjTOZxCqPb0d5LI7/cXh/i4tw==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+2h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn/72W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+9zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN/lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D/cXmgpOyW/1SmBz3XjVIi/zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV/bZOl8KqJBETCDJcY6O2aqhTUy+9x93ThKs1GKrRPePrWPluud7ttlgtRveit/pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow==</span><br></pre></td></tr></table></figure><p>临时使用。</p><p>请勿做商业用途。</p><p>请支持<a href="https://www.jetbrains.com/store" target="_blank" rel="noopener">正版</a>。</p><p>如果是学生或者老师，有免费的教育版可以用。<a href="https://www.jetbrains.com/zh/student/" target="_blank" rel="noopener">jetbrains学生免费授权计划</a></p><h1 id="重磅"><a href="#重磅" class="headerlink" title="重磅"></a>重磅</h1><p>如果你是开源项目的维护者，或者自己有开源项目，现在可以免费申请 JetBrains 便宜桶的免费授权拉。</p><blockquote><p>只要你在 Github 上有一个满足一下条件的项目即可申请</p></blockquote><h3 id="应用条款"><a href="#应用条款" class="headerlink" title="应用条款"></a>应用条款</h3><ul><li>您的项目符合<a href="https://qq52o.me/go/aHR0cHM6Ly9vcGVuc291cmNlLm9yZy9kb2NzL29zZA==" target="_blank" rel="noopener">开源定义</a></li><li>您的项目至少维护了 3 个月</li><li>您的项目正在积极和定期开发</li><li>你是项目负责人或积极的提交者</li><li>您的项目不是由商业公司或组织赞助的，也没有付费员工</li><li>您的项目不提供软件周围的商业服务（如咨询或培训），也不会分发付费版本的软件</li></ul><h3 id="许可条款"><a href="#许可条款" class="headerlink" title="许可条款"></a>许可条款</h3><ul><li>许可证提供 1 年，并允许在 1 年内免费升级软件的所有新版本</li><li>如果您的项目仍符合要求，则可以根据要求提供许可证续订</li><li>一个许可证可以安装在任意数量的计算机上，但不能同时使用两个或更多</li><li>许可证仅提供给核心团队开发人员</li></ul><h3 id="许可限制"><a href="#许可限制" class="headerlink" title="许可限制"></a>许可限制</h3><ul><li>许可证只能用于非商业操作系统开发。请考虑购买单独的许可证以在商业项目上工作</li><li>软件的使用仅限于授权用户，无权将软件传输给任何第三方</li></ul><hr><p><img src="/images/a1e717517f7da5e2.png" alt="img"></p><hr><p>申请之后等待审核即可，一般为 2 天左右。审核通过之后就可以通过邮件提示去激活账号。<strong>等明年快过期的时候可以再次申请。</strong></p><p><strong>申请地址：</strong> <a href="https://www.jetbrains.com/shop/eform/opensource?product=ALL" target="_blank" rel="noopener">https://www.jetbrains.com/shop/eform/opensource?product=ALL</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;激活码激活，可以激活最新的2019-1，但是需要修改hosts。&quot;&gt;&lt;a href=&quot;#激活码激活，可以激活最新的2019-1，但是需要修改hosts。&quot; class=&quot;headerlink&quot; title=&quot;激活码激活，可以激活最新的2019.1，但是需要修改ho
      
    
    </summary>
    
      <category term="ide" scheme="https://smallwhite.ml/categories/ide/"/>
    
    
      <category term="license" scheme="https://smallwhite.ml/tags/license/"/>
    
      <category term="idea" scheme="https://smallwhite.ml/tags/idea/"/>
    
      <category term="jetbrains" scheme="https://smallwhite.ml/tags/jetbrains/"/>
    
  </entry>
  
  <entry>
    <title>学习golang的第一步-自建免费 go modules 代理</title>
    <link href="https://smallwhite.ml/pub/go/deploy-go-modules-proxy.html"/>
    <id>https://smallwhite.ml/pub/go/deploy-go-modules-proxy.html</id>
    <published>2019-04-30T09:48:12.000Z</published>
    <updated>2020-11-18T03:13:32.670Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h3><p>最近想研究golang，但是被墙堵住了，科学上网又感觉太慢，而且不方便设置。</p><p>突然间发现发现了go有个变量 <code>GOPROXY</code> 可以设置代理。</p><p>然后各种baidu,gg 发现目前网上主要有这两个 <code>GOPROXY=&quot;https://athens.azurefd.net&quot;</code> <code>GOPROXY=&quot;https://goproxy.io&quot;</code> 代理。</p><p>但是速度都太慢了，经常有包下载不下来。 所以想研究下看能不能自己搭一个代理方便自己用。 而 goproxy.io提供了一个docker，而且heroku也支持。所有有了这篇类似教程的文章。</p><h3 id="用-goproxy-自建-go-modules-代理，部署到-heroku"><a href="#用-goproxy-自建-go-modules-代理，部署到-heroku" class="headerlink" title="用 goproxy 自建 go modules 代理，部署到 heroku"></a>用 <a href="https://github.com/goproxyio/goproxy" target="_blank" rel="noopener">goproxy</a> 自建 go modules 代理，部署到 <a href="https://heroku.com" target="_blank" rel="noopener">heroku</a></h3><ol><li>点击下面这个按钮（或者先fork再点，这样可以自己修改部署脚本）</li></ol><p><a href="https://heroku.com/deploy?template=https://github.com/whtiehack/goproxy/tree/master" target="_blank" rel="noopener"><img src="https://www.herokucdn.com/deploy/button.png" alt="Deploy"></a></p><p>用 <a href="https://github.com/goproxyio/goproxy" target="_blank" rel="noopener">goproxy</a> 在 <a href="https://heroku.com" target="_blank" rel="noopener">heroku</a> 自建 go modules 代理。</p><p><img src="/images/56861611-1606b680-69d5-11e9-825a-6fa111a782ed.png" alt="image"></p><blockquote><p>App name  是一个唯一的 app名字</p></blockquote><blockquote><p>Choose a region 有美国和欧洲可以选。个人认为美国的速度还不错。会在region里随机分配一个节点给你，有的节点很快，有的比较慢。不过还是会比 goproxy.io 之类的快。</p></blockquote><blockquote><p>点 Create app ,等一会就部署完成了。</p></blockquote><ol start="2"><li>现在你就可以使用你自建的 go modules 代理了。</li></ol><p>linux:<br><code>export GOPROXY=https://youappname.herokuapp.com</code></p><p>windows:<br><code>$env:GOPROXY = &quot;https://youappname.herokuapp.com&quot;</code></p><ol start="3"><li>Now, when you build and run your applications, go will fetch dependencies via <code>https://youappname.herokuapp.com</code>.</li></ol><blockquote><p>Note: This proxy can’t fetch your private repos of course.</p></blockquote><blockquote><p><code>youappname</code> 是你Crate New App 时的 App name</p></blockquote><ol start="4"><li>直接打开你申请的链接应该是显示空白。</li></ol><p>可以用这个链接测试一下： <a href="https://youappname.herokuapp.com/github.com/nsqio/nsq/@v/list" target="_blank" rel="noopener">https://youappname.herokuapp.com/github.com/nsqio/nsq/@v/list</a></p><ol start="5"><li><p>heroku 部署的 app，在一段时间内没有流量会被冻结。然后有人访问的时候就才会再次启动。（所以第一次打开会比较慢，启动好了就快了）</p></li><li><p>提供一个懒人用测试地址，多人用不能保证速度，而且每个月是有限额的(一个人单独用完全足够)。所以还是建议自己 fork 自己建立一个 app。 <a href="https://goproxyus.herokuapp.com" target="_blank" rel="noopener">https://goproxyus.herokuapp.com</a></p></li></ol><h3 id="额外的功能"><a href="#额外的功能" class="headerlink" title="额外的功能"></a>额外的功能</h3><ul><li>可以用这个代理下载仓库 </li></ul><ol><li><p><a href="https://goproxyus.herokuapp.com/github.com/whtiehack/goproxy/@latest" target="_blank" rel="noopener">https://goproxyus.herokuapp.com/github.com/whtiehack/goproxy/@latest</a></p></li><li><p><a href="https://goproxyus.herokuapp.com/github.com/whtiehack/goproxy/@v/v0.0.0-20190429094219-4f70e1c14471.zip" target="_blank" rel="noopener">https://goproxyus.herokuapp.com/github.com/whtiehack/goproxy/@v/v0.0.0-20190429094219-4f70e1c14471.zip</a></p></li><li><p>latest 有个问题，不会再次去拿最新代码。</p></li></ol><blockquote><p>或者你知道明确版本的放可以构造url直接下载 : <a href="https://goproxyus.herokuapp.com/github.com/node-pinus/pinus/@v/v1.3.10.zip" target="_blank" rel="noopener">https://goproxyus.herokuapp.com/github.com/node-pinus/pinus/@v/v1.3.10.zip</a></p></blockquote><ul><li>被缓存下来的数据可以打开 <a href="https://goproxyus.herokuapp.com" target="_blank" rel="noopener">https://goproxyus.herokuapp.com</a> 直接浏览并下载。</li></ul><hr><h3 id="github-仓库-https-github-com-whtiehack-goproxy"><a href="#github-仓库-https-github-com-whtiehack-goproxy" class="headerlink" title="github 仓库 : https://github.com/whtiehack/goproxy"></a>github 仓库 : <a href="https://github.com/whtiehack/goproxy" target="_blank" rel="noopener">https://github.com/whtiehack/goproxy</a></h3><hr><h3 id="现有的可用的其它代理："><a href="#现有的可用的其它代理：" class="headerlink" title="现有的可用的其它代理："></a>现有的可用的其它代理：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">export GOPROXY="https://athens.azurefd.net"</span><br><span class="line">export GOPROXY="https://goproxy.io"</span><br><span class="line">export GOPROXY="https://goproxyus.herokuapp.com"</span><br><span class="line">export GOPROXY="https://goproxy.cn"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 最新官方的</span><br><span class="line">export GOPROXY="https://proxy.golang.org"</span><br></pre></td></tr></table></figure><p>别忘记开启golang的 modules 特性。</p><p>goland 可以这样设置代理：</p><p><img src="/images/1557287491472.png" alt="1557287491472"></p><hr><h4 id="2019-10-10-10-35-21-更新"><a href="#2019-10-10-10-35-21-更新" class="headerlink" title="2019-10-10 10:35:21 更新"></a>2019-10-10 10:35:21 更新</h4><p>Go 1.13 及以上  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ go env -w GOPROXY=https://yourproxy.com,direct</span><br></pre></td></tr></table></figure><h4 id="2019-10-25-13-28-30-更新"><a href="#2019-10-25-13-28-30-更新" class="headerlink" title="2019-10-25 13:28:30 更新"></a>2019-10-25 13:28:30 更新</h4><p>Go 1.13 及以上  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go env -w GOSUMDB=&quot;sum.golang.google.cn&quot;</span><br></pre></td></tr></table></figure><h4 id="2019-10-28-16-16-13-更新"><a href="#2019-10-28-16-16-13-更新" class="headerlink" title="2019-10-28 16:16:13 更新"></a>2019-10-28 16:16:13 更新</h4><p>阿里出了一个代理   <a href="https://mirrors.aliyun.com/goproxy/" target="_blank" rel="noopener">https://mirrors.aliyun.com/goproxy/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export GOPROXY=https://mirrors.aliyun.com/goproxy/</span><br></pre></td></tr></table></figure><h4 id="2020-03-27-15-43-更新"><a href="#2020-03-27-15-43-更新" class="headerlink" title="2020-03-27 15:43 更新"></a>2020-03-27 15:43 更新</h4><p>百度提供的 go 代理  <a href="https://goproxy.baidu.com/" target="_blank" rel="noopener">https://goproxy.baidu.com/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export GOPROXY=https://goproxy.baidu.com</span><br></pre></td></tr></table></figure><h4 id="2020-04-02-15-03-更新"><a href="#2020-04-02-15-03-更新" class="headerlink" title="2020-04-02 15:03 更新"></a>2020-04-02 15:03 更新</h4><p>sum.golang.google.cn 可能也已经被墙处理了。特别的不稳定</p><p>可以关闭 check sum </p><p><code>go env -w GOSUMDB=off</code></p><p><code>-w</code> 是写入文件</p><p><code>go env</code> 可以查看自己的go变量  包括 <code>env</code> 保存的目录</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;引子&quot;&gt;&lt;a href=&quot;#引子&quot; class=&quot;headerlink&quot; title=&quot;引子&quot;&gt;&lt;/a&gt;引子&lt;/h3&gt;&lt;p&gt;最近想研究golang，但是被墙堵住了，科学上网又感觉太慢，而且不方便设置。&lt;/p&gt;
&lt;p&gt;突然间发现发现了go有个变量 &lt;code&gt;GOP
      
    
    </summary>
    
      <category term="go" scheme="https://smallwhite.ml/categories/go/"/>
    
    
      <category term="go" scheme="https://smallwhite.ml/tags/go/"/>
    
      <category term="proxy" scheme="https://smallwhite.ml/tags/proxy/"/>
    
  </entry>
  
  <entry>
    <title>pinus配置使用pm2启动并配置log4js不写日志文件</title>
    <link href="https://smallwhite.ml/pub/pinus/pinus-use-pm2-start-and-setting-log4js-not-write-logfile.html"/>
    <id>https://smallwhite.ml/pub/pinus/pinus-use-pm2-start-and-setting-log4js-not-write-logfile.html</id>
    <published>2019-04-29T03:58:12.000Z</published>
    <updated>2020-11-18T03:13:32.670Z</updated>
    
    <content type="html"><![CDATA[<h3 id="这里只是讲怎么使用-pm2-来管理pinus进程与日志，可以做一个参考。"><a href="#这里只是讲怎么使用-pm2-来管理pinus进程与日志，可以做一个参考。" class="headerlink" title="这里只是讲怎么使用 pm2 来管理pinus进程与日志，可以做一个参考。"></a>这里只是讲怎么使用 <a href="https://github.com/Unitech/pm2" target="_blank" rel="noopener">pm2</a> 来管理pinus进程与日志，可以做一个参考。</h3><ol><li>因为pm2默认是自动写日志到文件的。而本人又不太了解log4js的配置，所以找 <a href="https://github.com/mybios" target="_blank" rel="noopener">@mybios</a> 要了一份不会写日志文件的 log4js的配置:</li></ol><p>log4js.json<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"appenders"</span>: &#123;</span><br><span class="line">        <span class="attr">"displayConsole"</span>: &#123;</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"console"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        // "other": &#123;</span><br><span class="line">        //     "type": "file",</span><br><span class="line">        //     "filename": "$&#123;opts:base&#125;/logs/$&#123;opts:serverId&#125;.log",</span><br><span class="line">        //     "maxLogSize": 1048576,</span><br><span class="line">        //     "layout": &#123;</span><br><span class="line">        //         "type": "basic"</span><br><span class="line">        //     &#125;,</span><br><span class="line">        //     "backups": 5</span><br><span class="line">        // &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    "categories": &#123;</span><br><span class="line">        "default": &#123;</span><br><span class="line">            "appenders": [</span><br><span class="line">                /*"other",*/"displayConsole"</span><br><span class="line">            ],</span><br><span class="line">            "level": "debug"</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    "replaceConsole": true,</span><br><span class="line">    "prefix": "$&#123;opts:serverId&#125; ",</span><br><span class="line">    "lineDebug": false,</span><br><span class="line">    "errorStack": true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这个配置只是把日志打印到标准输出而不写日志文件，所以log文件夹就不需要了。</p><ol start="2"><li>下面配置pm2启动文件</li></ol><p>pm2启动pinus进程配置文件示例：</p><details><br><summary>展开查看 pm2启动配置文件示例.json</summary><br><br>pm2启动配置文件示例.json<br><br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"apps"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"master"</span>,</span><br><span class="line">            <span class="attr">"cwd"</span>: <span class="string">"F:\\develop\\logicServer/game-server/dist/"</span>,</span><br><span class="line">            <span class="attr">"script"</span>: <span class="string">"app.js"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: <span class="string">"mode=stand-alone"</span>,</span><br><span class="line">            <span class="attr">"node_args"</span>: <span class="string">"--harmony"</span>,</span><br><span class="line">            <span class="attr">"exec_mode"</span>: <span class="string">"fork_mode"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"connector-server-1"</span>,</span><br><span class="line">            <span class="attr">"cwd"</span>: <span class="string">"F:\\develop\\logicServer/game-server/dist/"</span>,</span><br><span class="line">            <span class="attr">"script"</span>: <span class="string">"app.js"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: <span class="string">"env=development  id=connector-server-1  host=127.0.0.1  port=3150  clientHost=192.168.1.10  clientPort=3010  frontend=true  serverType=connector "</span>,</span><br><span class="line">            <span class="attr">"node_args"</span>: <span class="string">"  --inspect=0.0.0.0:10001"</span>,</span><br><span class="line">            <span class="attr">"exec_mode"</span>: <span class="string">"fork_mode"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"main-server-1"</span>,</span><br><span class="line">            <span class="attr">"cwd"</span>: <span class="string">"F:\\develop\\logicServer/game-server/dist/"</span>,</span><br><span class="line">            <span class="attr">"script"</span>: <span class="string">"app.js"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: <span class="string">"env=development  id=main-server-1  host=127.0.0.1  port=5100  serverType=main "</span>,</span><br><span class="line">            <span class="attr">"node_args"</span>: <span class="string">"  --inspect=0.0.0.0:10003"</span>,</span><br><span class="line">            <span class="attr">"exec_mode"</span>: <span class="string">"fork_mode"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"admin-server"</span>,</span><br><span class="line">            <span class="attr">"cwd"</span>: <span class="string">"F:\\develop\\logicServer/game-server/dist/"</span>,</span><br><span class="line">            <span class="attr">"script"</span>: <span class="string">"app.js"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: <span class="string">"env=development  id=admin-server  host=127.0.0.1  port=6100  serverType=admin "</span>,</span><br><span class="line">            <span class="attr">"node_args"</span>: <span class="string">"  --inspect=0.0.0.0:10030"</span>,</span><br><span class="line">            <span class="attr">"exec_mode"</span>: <span class="string">"fork_mode"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"purchase-server"</span>,</span><br><span class="line">            <span class="attr">"cwd"</span>: <span class="string">"F:\\develop\\logicServer/game-server/dist/"</span>,</span><br><span class="line">            <span class="attr">"script"</span>: <span class="string">"app.js"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: <span class="string">"env=development  id=purchase-server  host=127.0.0.1  port=7100  serverType=purchase "</span>,</span><br><span class="line">            <span class="attr">"node_args"</span>: <span class="string">"  --inspect=0.0.0.0:10040"</span>,</span><br><span class="line">            <span class="attr">"exec_mode"</span>: <span class="string">"fork_mode"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br></details><p>这样就可以直接用pm2控制定义好的进程   </p><blockquote><p><code>pm2 start pm2启动配置文件示例.json</code>   </p></blockquote><blockquote><p><code>pm2 restart pm2启动配置文件示例.json</code>  </p></blockquote><blockquote><p><code>pm2 stop pm2启动配置文件示例.json</code></p></blockquote><p>这种pm2配置文件我是写了个脚本来生成的。每个人的项目不一样(我们的项目有一个额外参数 cfgenv)，下面的生成脚本代码可以参考一下：</p><details><br><summary>展开查看生成脚本代码</summary><br><br><br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="string">'ts-node/register'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> parseArgs = <span class="function"><span class="keyword">function</span> (<span class="params">args</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> argsMap = &#123;&#125;;</span><br><span class="line">    <span class="keyword">let</span> mainPos = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (args[mainPos].indexOf(<span class="string">'--'</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        mainPos++;</span><br><span class="line">    &#125;</span><br><span class="line">    argsMap.main = args[mainPos];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = (mainPos + <span class="number">1</span>); i &lt; args.length; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> arg = args[i];</span><br><span class="line">        <span class="keyword">let</span> sep = arg.indexOf(<span class="string">'='</span>);</span><br><span class="line">        <span class="keyword">let</span> key = arg.slice(<span class="number">0</span>, sep);</span><br><span class="line">        <span class="keyword">let</span> value = arg.slice(sep + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">isNaN</span>(<span class="built_in">Number</span>(value)) &amp;&amp; (value.indexOf(<span class="string">'.'</span>) &lt; <span class="number">0</span>)) &#123;</span><br><span class="line">            value = <span class="built_in">Number</span>(value);</span><br><span class="line">        &#125;</span><br><span class="line">        argsMap[key] = value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> argsMap;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> program = parseArgs(process.argv);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> util = <span class="built_in">require</span>(<span class="string">'util'</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="keyword">const</span> root = path.resolve(__dirname, <span class="string">'../'</span>);</span><br><span class="line"><span class="keyword">const</span> argroot = program[<span class="string">'argroot'</span>] ? program[<span class="string">'argroot'</span>] : root;</span><br><span class="line"><span class="keyword">const</span> cfgenv = program[<span class="string">'cfgenv'</span>] ? program[<span class="string">'cfgenv'</span>] : <span class="string">'dev110'</span>;</span><br><span class="line"><span class="keyword">const</span> dist = program[<span class="string">'dist'</span>] === <span class="string">'true'</span> ? <span class="string">'dist/'</span> : <span class="string">''</span>;</span><br><span class="line">process.argv.push(<span class="string">'cfgenv='</span> + cfgenv);</span><br><span class="line"><span class="keyword">const</span> env = program[<span class="string">'env'</span>] ? program[<span class="string">'env'</span>] : <span class="string">'development'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> masterApp = &#123;</span><br><span class="line">    <span class="string">"name"</span>: cfgenv + <span class="string">"-master"</span>,</span><br><span class="line">    <span class="string">"cwd"</span>: argroot + <span class="string">'/logicServer/game-server/'</span> + dist,</span><br><span class="line">    <span class="string">"script"</span>: dist ? <span class="string">"app.js"</span> : <span class="string">"index.js"</span>,</span><br><span class="line">    <span class="string">"args"</span>: <span class="string">`cfgenv=<span class="subst">$&#123;cfgenv&#125;</span> mode=stand-alone env=<span class="subst">$&#123;env&#125;</span>`</span>,</span><br><span class="line">    <span class="string">"node_args"</span>: <span class="string">"--harmony"</span>,</span><br><span class="line">    <span class="string">"exec_mode"</span>: <span class="string">"fork_mode"</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span>     apps = [</span><br><span class="line">        masterApp,</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> servers = <span class="built_in">require</span>(root + <span class="string">'/logicServer/game-server/'</span> + dist + <span class="string">'config/'</span> + cfgenv + <span class="string">'/servers'</span>);</span><br><span class="line">servers = servers[env];</span><br><span class="line"><span class="keyword">if</span> (!servers) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">' no servers env '</span> + env);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> serverMap = &#123;&#125;, slist, i, l, server;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> serverType <span class="keyword">in</span> servers) &#123;</span><br><span class="line">    slist = servers[serverType];</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>, l = slist.length; i &lt; l; i++) &#123;</span><br><span class="line">        server = slist[i];</span><br><span class="line">        server.serverType = serverType;</span><br><span class="line">        serverMap[server.id] = server;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> sKey <span class="keyword">in</span> serverMap) &#123;</span><br><span class="line">    server = serverMap[sKey];</span><br><span class="line">    <span class="keyword">let</span> cmd = <span class="string">'env='</span> + env + <span class="string">' '</span>;</span><br><span class="line">    <span class="keyword">let</span> args = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> server) &#123;</span><br><span class="line">        <span class="keyword">if</span> (key === <span class="string">'args'</span>) &#123;</span><br><span class="line">            args = server[key];</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cmd += util.format(<span class="string">' %s=%s '</span>, key, server[key]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//  console.log('cmd',sKey,cmd);</span></span><br><span class="line">    serverMap[sKey] = &#123;</span><br><span class="line">        name: cfgenv + <span class="string">"-"</span> + sKey,</span><br><span class="line">        cwd: argroot + <span class="string">'/logicServer/game-server/'</span> + dist,</span><br><span class="line">        script: dist ? <span class="string">"app.js"</span> : <span class="string">'index.js'</span>,</span><br><span class="line">        args: cmd,</span><br><span class="line">        node_args: <span class="string">" "</span> + args,</span><br><span class="line">        exec_mode: <span class="string">"fork_mode"</span></span><br><span class="line">    &#125;;</span><br><span class="line">    apps.push(serverMap[sKey]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// console.log(serverMap);</span></span><br><span class="line"><span class="keyword">let</span> filename = <span class="string">'/pm2_'</span> + generateType + <span class="string">'_'</span> + cfgenv + <span class="string">'_'</span> + env + <span class="string">'.json'</span>;</span><br><span class="line">fs.writeFileSync(__dirname + filename, <span class="built_in">JSON</span>.stringify(&#123;apps&#125;, <span class="literal">null</span>, <span class="number">4</span>));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'generate success'</span>, filename, apps.map(<span class="function"><span class="params">val</span> =&gt;</span> val.name));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> conns = apps.filter(<span class="function"><span class="params">v</span> =&gt;</span> v.name.indexOf(<span class="string">'connector'</span>) &gt;= <span class="number">0</span>)</span><br><span class="line">filename = <span class="string">'/pm2_'</span> + generateType + <span class="string">'_'</span> + cfgenv + <span class="string">'_'</span> + env + <span class="string">'_only_conn_process.json'</span>;</span><br><span class="line">fs.writeFileSync(__dirname + filename, <span class="built_in">JSON</span>.stringify(&#123;apps: conns&#125;, <span class="literal">null</span>, <span class="number">4</span>));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'generate _only_conn_master_process success'</span>, filename, conns.map(<span class="function"><span class="params">val</span> =&gt;</span> val.name));</span><br><span class="line"></span><br><span class="line">filename = <span class="string">'/pm2_'</span> + generateType + <span class="string">'_'</span> + cfgenv + <span class="string">'_'</span> + env + <span class="string">'_only_logic_process.json'</span>;</span><br><span class="line">apps = apps.filter(<span class="function"><span class="params">v</span> =&gt;</span> v.name.indexOf(<span class="string">'connector'</span>) === <span class="number">-1</span> &amp;&amp; v.name.indexOf(<span class="string">'master'</span>) === <span class="number">-1</span>)</span><br><span class="line">fs.writeFileSync(__dirname + filename, <span class="built_in">JSON</span>.stringify(&#123;apps&#125;, <span class="literal">null</span>, <span class="number">4</span>));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'generate only_logic_process success'</span>, filename, apps.map(<span class="function"><span class="params">val</span> =&gt;</span> val.name));</span><br></pre></td></tr></table></figure><br><br></details><ol start="3"><li>当然你也可以不用配置文件来启动，通过人肉或者其它的方式来启动进程：</li></ol><p>比如要独立启动master 进程</p><p><code>pm2 start -n master app.js -- mode=stand-alone</code></p><p>pm2要给进程传参数需要放到  <code>--</code>  后面</p><p>独立启动 connector-server-1</p><p><code>pm2 start -n connector-server-1 app.js -- env=development  id=connector-server-1  host=127.0.0.1  port=3150  clientHost=192.168.1.10  clientPort=3010  frontend=true  serverType=connector</code></p><ol start="4"><li>每个人的项目都是不一样的，以上只是一个参考。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;这里只是讲怎么使用-pm2-来管理pinus进程与日志，可以做一个参考。&quot;&gt;&lt;a href=&quot;#这里只是讲怎么使用-pm2-来管理pinus进程与日志，可以做一个参考。&quot; class=&quot;headerlink&quot; title=&quot;这里只是讲怎么使用 pm2 来管理pin
      
    
    </summary>
    
      <category term="pinus" scheme="https://smallwhite.ml/categories/pinus/"/>
    
    
      <category term="pinus" scheme="https://smallwhite.ml/tags/pinus/"/>
    
      <category term="pomelo" scheme="https://smallwhite.ml/tags/pomelo/"/>
    
      <category term="nodejs" scheme="https://smallwhite.ml/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>pinus使用pomelo插件</title>
    <link href="https://smallwhite.ml/pub/pinus/pinus-use-pomelo-plugin.html"/>
    <id>https://smallwhite.ml/pub/pinus/pinus-use-pomelo-plugin.html</id>
    <published>2019-04-29T03:53:13.000Z</published>
    <updated>2020-11-18T03:13:32.670Z</updated>
    
    <content type="html"><![CDATA[<h3 id="pinus-与-pomelo加载插件的机制有所不同"><a href="#pinus-与-pomelo加载插件的机制有所不同" class="headerlink" title="pinus 与 pomelo加载插件的机制有所不同"></a>pinus 与 pomelo加载插件的机制有所不同</h3><hr><p>pinus的 app.use 需要实现  IPlugin 接口</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 一个pinus插件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> IPlugin <span class="keyword">extends</span> ILifeCycle &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插件的名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    name: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 启动插件时需要自动加载的组件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    components ?: ComponentContructor[];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 启动插件时需要侦听的应用程序事件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    events ?: ApplicationEventContructor[];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插件暴漏的handler所在的路径</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    handlerPath ?: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插件暴漏的remoters所在的路径</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    remoterPath?: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插件暴漏的crons所在的路径</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    cronPath ?: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>pomelo的app.use ，插件需要 实现这样的结构：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">components: __dirname + <span class="string">'/lib/components/'</span>,</span><br><span class="line">events: __dirname + <span class="string">'/lib/events'</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>通过以上的对比可以看到插件的主要区别是 <code>components</code> 和 <code>events</code>两个结构的区别，pinus需要的是 数组，而pomelo只是需要一个文件路径，内部去加载路径内的文件。</p><p>所以pinus要使用pomelo的插件 需要做的就是 把 components 与 events字段转换一下就行了</p><hr><p>下面以 <a href="https://github.com/NetEase/pomelo-status-plugin" target="_blank" rel="noopener">pomelo-status-plugin</a> 插件为例。 当然最后也可以写一个通用的转换工具函数。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> pomeloStatusPlugin = <span class="built_in">require</span>(<span class="string">'pomelo-status-plugin'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> componentsPath = pomeloStatusPlugin.components</span><br><span class="line">pomeloStatusPlugin.components = [<span class="built_in">require</span>(componentsPath+<span class="string">'/status'</span>)]</span><br><span class="line"><span class="keyword">const</span> eventsPath = pomeloStatusPlugin.events</span><br><span class="line">pomeloStatusPlugin.events = [<span class="built_in">require</span>(eventsPath+<span class="string">'/event'</span>)]</span><br><span class="line">pomeloStatusPlugin.name = <span class="string">'pomelo-status-plugin'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> app = pinus.createApp();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用</span></span><br><span class="line">app.use(pomeloStatusPlugin)</span><br></pre></td></tr></table></figure><p><strong> PS: 以上代码手写，未经过测试。理论上应该没问题。 </strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;pinus-与-pomelo加载插件的机制有所不同&quot;&gt;&lt;a href=&quot;#pinus-与-pomelo加载插件的机制有所不同&quot; class=&quot;headerlink&quot; title=&quot;pinus 与 pomelo加载插件的机制有所不同&quot;&gt;&lt;/a&gt;pinus 与 pom
      
    
    </summary>
    
      <category term="pinus" scheme="https://smallwhite.ml/categories/pinus/"/>
    
    
      <category term="pinus" scheme="https://smallwhite.ml/tags/pinus/"/>
    
      <category term="pomelo" scheme="https://smallwhite.ml/tags/pomelo/"/>
    
      <category term="nodejs" scheme="https://smallwhite.ml/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>javascript 简单检查数组是否有重复值(nodejs )</title>
    <link href="https://smallwhite.ml/pub/uncategorized/javascript-jian-dan-jian-cha-shu-zu-shi-fou-you-chong-fu-zhi-nodejs.html"/>
    <id>https://smallwhite.ml/pub/uncategorized/javascript-jian-dan-jian-cha-shu-zu-shi-fou-you-chong-fu-zhi-nodejs.html</id>
    <published>2018-08-02T02:10:11.000Z</published>
    <updated>2020-11-18T03:13:32.674Z</updated>
    
    <content type="html"><![CDATA[<ul><li>TS 版  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 有重复返回true</span><br><span class="line">export function checkDuplicationNormal&lt;T&gt;(arr: T[]) &#123;</span><br><span class="line">    return arr.some((val, idx) =&gt; &#123;</span><br><span class="line">        return arr.includes(val, idx + 1);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>js 版  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function checkDuplicationNormal(arr) &#123;</span><br><span class="line">    return arr.some((val, idx) =&gt; &#123;</span><br><span class="line">        return arr.includes(val, idx + 1);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PS:  <code>arr.includes(val, idx + 1);</code>  可以使用  <code>arr.indexOf(val, idx + 1)&gt;=0</code>  替代。</p></li></ul><ul><li><p>jest 测试  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">import &#123;checkDuplicationNormal&#125; from &quot;./beanUtil&quot;;</span><br><span class="line"></span><br><span class="line">describe(&apos;test beanUtil&apos;, () =&gt; &#123;</span><br><span class="line">    it(&apos;should checkDuplicationString correct&apos;, async () =&gt; &#123;</span><br><span class="line">        let arr = [1, 2, 3, 4];</span><br><span class="line">        let ret = checkDuplicationNormal(arr);</span><br><span class="line">        expect(ret).toBeFalsy();</span><br><span class="line"></span><br><span class="line">        arr = [1, 1, 2, 3, 4];</span><br><span class="line">        ret = checkDuplicationNormal(arr);</span><br><span class="line">        expect(ret).toBeTruthy();</span><br><span class="line"></span><br><span class="line">        arr = [1, 2, 3, 4, 1];</span><br><span class="line">        ret = checkDuplicationNormal(arr);</span><br><span class="line">        expect(ret).toBeTruthy();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        let strArr = [&apos;3213&apos;, &apos;aa&apos;, &apos;aaa&apos;, &apos;a&apos;];</span><br><span class="line">        ret = checkDuplicationNormal(strArr);</span><br><span class="line">        expect(ret).toBeFalsy();</span><br><span class="line"></span><br><span class="line">        strArr = [&apos;3213&apos;, &apos;a&apos;, &apos;aa&apos;, &apos;aaa&apos;, &apos;a&apos;];</span><br><span class="line">        ret = checkDuplicationNormal(strArr);</span><br><span class="line">        expect(ret).toBeTruthy();</span><br><span class="line"></span><br><span class="line">        let other = [&apos;3213&apos;, 3213, &apos;aa&apos;, &apos;aaa&apos;, &apos;a&apos;];</span><br><span class="line">        ret = checkDuplicationNormal(other);</span><br><span class="line">        expect(ret).toBeFalsy();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>记录一下。</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;TS 版  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;
      
    
    </summary>
    
    
      <category term="CSDN迁移" scheme="https://smallwhite.ml/tags/CSDN%E8%BF%81%E7%A7%BB/"/>
    
  </entry>
  
  <entry>
    <title>webstorm或 idea 隐藏不想看到的文件或文件夹 如（.meta, node_modules)</title>
    <link href="https://smallwhite.ml/pub/uncategorized/webstorm-huo-idea-yin-cang-bu-xiang-kan-dao-de-wen-jian-huo-wen-jian-jia-ru.meta-node-modules.html"/>
    <id>https://smallwhite.ml/pub/uncategorized/webstorm-huo-idea-yin-cang-bu-xiang-kan-dao-de-wen-jian-huo-wen-jian-jia-ru.meta-node-modules.html</id>
    <published>2018-07-09T09:17:53.000Z</published>
    <updated>2020-11-18T03:13:32.674Z</updated>
    
    <content type="html"><![CDATA[<p>  <img src="/images/20180709171635547.png" alt="这里写图片描述"></p><p> 在 最底部添加你想忽略的文件类型或者文件夹就好了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;  &lt;img src=&quot;/images/20180709171635547.png&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/p&gt;
&lt;p&gt; 在 最底部添加你想忽略的文件类型或者文件夹就好了。&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="CSDN迁移" scheme="https://smallwhite.ml/tags/CSDN%E8%BF%81%E7%A7%BB/"/>
    
  </entry>
  
  <entry>
    <title>bluebird还有替代原生 promise的必要吗</title>
    <link href="https://smallwhite.ml/pub/uncategorized/bluebird-instead-origin-promise.html"/>
    <id>https://smallwhite.ml/pub/uncategorized/bluebird-instead-origin-promise.html</id>
    <published>2018-01-10T06:52:55.000Z</published>
    <updated>2020-11-18T03:13:32.674Z</updated>
    
    <content type="html"><![CDATA[<h4 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a><a href></a>测试代码</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// global.Promise = require('bluebird').Promise;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'node version:'</span>,process.version);</span><br><span class="line"><span class="keyword">const</span> co = <span class="built_in">require</span>(<span class="string">'co'</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">testfun_co</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> total = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i&lt;<span class="number">10000</span>;i++)&#123;</span><br><span class="line">        total += <span class="keyword">yield</span> done=&gt;done(<span class="literal">null</span>,i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'total:'</span>,total);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">co(<span class="function"><span class="keyword">function</span>*(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.time(<span class="string">'bench origin'</span>);</span><br><span class="line">    <span class="keyword">yield</span> *testfun_co();</span><br><span class="line">    <span class="keyword">yield</span> *testfun_co();</span><br><span class="line">    <span class="built_in">console</span>.timeEnd(<span class="string">'bench origin'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;).then(<span class="function"><span class="params">ret</span>=&gt;</span><span class="built_in">console</span>.log(<span class="string">'all test end'</span>));</span><br></pre></td></tr></table></figure><h3 id="两个版本的node-测试结果"><a href="#两个版本的node-测试结果" class="headerlink" title="两个版本的node 测试结果"></a><a href></a>两个版本的node 测试结果</h3><h4 id="v8-9-4"><a href="#v8-9-4" class="headerlink" title="v8.9.4"></a><a href></a>v8.9.4</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">//  8.9.4 原生的Promise</span><br><span class="line">➜  bin node "/Users/mac/Documents/testnodejs/pathtest2.js"</span><br><span class="line">node version: v8.9.4</span><br><span class="line">total: 49995000</span><br><span class="line">total: 49995000</span><br><span class="line">bench origin: 23.947ms</span><br><span class="line">all test end</span><br><span class="line">➜  bin node "/Users/mac/Documents/testnodejs/pathtest2.js"</span><br><span class="line">node version: v8.9.4</span><br><span class="line">total: 49995000</span><br><span class="line">total: 49995000</span><br><span class="line">bench origin: 24.263ms</span><br><span class="line">all test end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 8.9.4 bluebird</span><br><span class="line">➜  bin node "/Users/mac/Documents/testnodejs/pathtest2.js"</span><br><span class="line">node version: v8.9.4</span><br><span class="line">total: 49995000</span><br><span class="line">total: 49995000</span><br><span class="line">bench origin: 43.253ms</span><br><span class="line">all test end</span><br><span class="line">➜  bin node "/Users/mac/Documents/testnodejs/pathtest2.js"</span><br><span class="line">node version: v8.9.4</span><br><span class="line">total: 49995000</span><br><span class="line">total: 49995000</span><br><span class="line">bench origin: 42.724ms</span><br><span class="line">all test end</span><br></pre></td></tr></table></figure><h4 id="v6-12-3"><a href="#v6-12-3" class="headerlink" title="v6.12.3"></a><a href></a>v6.12.3</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">// 原生 Promise</span><br><span class="line">➜  bin ./node /Users/mac/Documents/testnodejs/pathtest2.js</span><br><span class="line">node version: v6.12.3</span><br><span class="line">total: 49995000</span><br><span class="line">total: 49995000</span><br><span class="line">bench origin: 56.907ms</span><br><span class="line">all test end</span><br><span class="line">➜  bin ./node /Users/mac/Documents/testnodejs/pathtest2.js</span><br><span class="line">node version: v6.12.3</span><br><span class="line">total: 49995000</span><br><span class="line">total: 49995000</span><br><span class="line">bench origin: 53.840ms</span><br><span class="line">all test end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// blubird</span><br><span class="line">➜  bin ./node /Users/mac/Documents/testnodejs/pathtest2.js</span><br><span class="line">node version: v6.12.3</span><br><span class="line">total: 49995000</span><br><span class="line">total: 49995000</span><br><span class="line">bench origin: 39.129ms</span><br><span class="line">all test end</span><br><span class="line">➜  bin ./node /Users/mac/Documents/testnodejs/pathtest2.js</span><br><span class="line">node version: v6.12.3</span><br><span class="line">total: 49995000</span><br><span class="line">total: 49995000</span><br><span class="line">bench origin: 38.773ms</span><br><span class="line">all test end</span><br></pre></td></tr></table></figure><ul><li>对于8.x版本的node,可能只有  <code>promisify</code>  还有用? </li><li>不过 node8.0加入了一个新API  <code>util.promisify</code>  … </li><li>还在使用老版本node的同学可以继续用bluebird以提升性能    </li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;测试代码&quot;&gt;&lt;a href=&quot;#测试代码&quot; class=&quot;headerlink&quot; title=&quot;测试代码&quot;&gt;&lt;/a&gt;&lt;a href&gt;&lt;/a&gt;测试代码&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c
      
    
    </summary>
    
    
      <category term="CSDN迁移" scheme="https://smallwhite.ml/tags/CSDN%E8%BF%81%E7%A7%BB/"/>
    
  </entry>
  
  <entry>
    <title>code runner 代码片段调试神器</title>
    <link href="https://smallwhite.ml/pub/uncategorized/code-runner-dai-ma-pian-duan-diao-shi-shen-qi.html"/>
    <id>https://smallwhite.ml/pub/uncategorized/code-runner-dai-ma-pian-duan-diao-shi-shen-qi.html</id>
    <published>2016-12-29T01:53:40.000Z</published>
    <updated>2020-11-18T03:13:32.674Z</updated>
    
    <content type="html"><![CDATA[<h2 id="download-版本-2-2-2"><a href="#download-版本-2-2-2" class="headerlink" title="download 版本 2.2.2"></a>download 版本 2.2.2</h2><p> <a href="http://xclient.info/s/code-runner.html" target="_blank" rel="noopener">http://xclient.info/s/code-runner.html</a></p><h2 id="Crack"><a href="#Crack" class="headerlink" title="Crack"></a>Crack</h2><ol start="2"><li>打开  <code>CORE Keygen.app</code> . 随便生成一个注册码. </li><li>打开  <code>/etc/hosts</code>  ,加入一条记录  <code>127.0.0.1 coderunnerapp.com</code>  </li><li>打开  <code>CodeRunner.app</code> ,输入注册码激活.  <h3 id="提供几个注册码给懒人"><a href="#提供几个注册码给懒人" class="headerlink" title="提供几个注册码给懒人"></a>提供几个注册码给懒人</h3></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">AEAAA-ADHG2-LP22B-WS36Q</span><br><span class="line"></span><br><span class="line">AEAAA-AAHDL-LTCCA-224YQ</span><br><span class="line"></span><br><span class="line">AEAAA-AE7ZU-FP7IG-NBL7Q</span><br><span class="line"></span><br><span class="line">AEAAA-ABPPJ-SMOMD-2MTDQ</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;download-版本-2-2-2&quot;&gt;&lt;a href=&quot;#download-版本-2-2-2&quot; class=&quot;headerlink&quot; title=&quot;download 版本 2.2.2&quot;&gt;&lt;/a&gt;download 版本 2.2.2&lt;/h2&gt;&lt;p&gt; &lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="CSDN迁移" scheme="https://smallwhite.ml/tags/CSDN%E8%BF%81%E7%A7%BB/"/>
    
  </entry>
  
  <entry>
    <title>程序员，你为什么值这么多钱？</title>
    <link href="https://smallwhite.ml/pub/uncategorized/cheng-xu-yuan-ni-wei-shi-me-zhi-zhe-me-duo-qian.html"/>
    <id>https://smallwhite.ml/pub/uncategorized/cheng-xu-yuan-ni-wei-shi-me-zhi-zhe-me-duo-qian.html</id>
    <published>2016-12-01T08:13:29.000Z</published>
    <updated>2020-11-18T03:13:32.678Z</updated>
    
    <content type="html"><![CDATA[<p>  <img src="https://static.oschina.net/uploads/space/2016/1130/113640_GNZC_2720166.jpg" alt="这里写图片描述"></p><p> 听说一段时间不加薪，人就会开始思考起和工资有关的问题。消费水平又提升了，能力也进步了，经验也更多了，怎么还没涨工资呢？</p><p> 近两年，有了点余钱就开始考虑起投资来，比如：投资股票首先需要判断的就是关于公司价值和价格的关系。回到个人身上，似乎工资也就是个人价值在市场上的一个价格。那我们的工资是如何被定义或确定的？</p><p> 因为我的程序员职业背景，下面就以这个职业为例来分析下这个问题。</p><h3 id="表象与实质"><a href="#表象与实质" class="headerlink" title="表象与实质"></a>表象与实质</h3><p> 工资的高低给我们的感觉似乎和你的技能、经验呈一个正比关系。毕竟每次找工作面试的时候，考察的都是候选人的技能、经验相关水平，然后给予一个相应的级别，最后确定一个工资范围。而且一般有正规工资体系的公司，都会按照专业水平划分能力级别，以此对应不同的工资等级。</p><p> 这个对应关系是我们能观察到的一个现象，且有切身的体会。所以很直觉的就会把工资高低和我们的技能水平、经验值关联起来。工作初期的很长那么一段时间内我都是这么以为的。</p><p> 因而，当刚工作了两三年后，技能水平迅猛提升、经验值飞速增长，这个阶段属于<a href="http://mp.weixin.qq.com/s?__biz=MzAxMTEyOTQ5OQ==&amp;mid=2650610717&amp;idx=1&amp;sn=f23d1afadab0c22249eab5f332cd0677&amp;chksm=834c7be9b43bf2ff13e168b25b319348da2f47d9df358721971b47f227322ee293551a6fba6c" target="_blank" rel="noopener">《两种增长类型》</a>中的对数增长初期。上升曲线特别陡峭，而工资的增长呢，则属于指数增长的初期，几乎感觉不到增长，自我感觉是技能和经验已经翻倍，但工资似乎还在原地或就涨了 20%。</p><p> 其中有个例外就是校招，校招刚毕业的同学的工资有可能比毕业工作了两三年的同学更高，出现倒挂现象。这在大公司的校招比较常见，这里决定工资高低的，和经验技能无关，只和公司的人才储备、市场竞争、品牌宣传有关。</p><blockquote><p>工资不是用来支付给技能的，不要以为技能越高、工资自然应该越高。<br> 工资是用来支付给责任的，责任越大，工资越高。<br> 涨工资，是因为承担了更大的责任。</p><p> 上面所说正是工资的实质。所以，站在公司的角度，它会设计很多不同的岗位，有管理岗、有各种专业系列岗，而每个岗位又对应不同的职责。而岗位职责对技能和经验的要求决定了该岗位的工资范围，也决定了整个公司的人力成本范围。</p></blockquote><p> 搞清楚了工资的实质，就明白涨工资是怎么回事了。涨工资，一种是岗位职责工资范围内的调节，毕竟如果长时间不涨，也不利于人员稳定。另一种是，升级到更高级别岗位，这种除了当下领到的工资涨了，而潜在的可涨的工资范围也提高了。所以，有时你的技能提升后，但公司业务发展没那么快，不能提供更高级别的岗位职责，工资也就涨不上去了。</p><p> 另一个误解是，工资跟我的表现有关。今年工作很努力，表现很好，年底了公司业绩也很好，就会预期涨工资。但前面说了工资是支付给责任的，不取决于你的表现。这种情况一般通过发奖金来奖励突出的业绩，这属于短期激励，当然也有公司会在岗位职责工资范围内适当调节提升以保持长期激励。</p><p> 对于管理岗位，因为经理人不属于个人贡献者，所以其工资的一部分通常和团队绩效绑定，称为“绩效奖金”。这个奖金一般在管理岗的全部薪酬中的百分比会随着薪酬的增加而增加，比如：高层可能占到 50%，而中层占到 20%-30%。前 Intel CEO 安迪·格鲁夫说过：</p><blockquote></blockquote><blockquote><p>每一份工作所包含的最大价值都是有限的，不管一个人在这个职位上待了多久，最后总会达到薪资的上限。</p><p> 这个上限就是岗位工资范围的天花板。而外部市场会提供一些工资立即涨 50% 甚至翻倍的机会。面对这种机会时，先不要自大的以为你的价值被低估了，心想你看外面市场给了翻倍的价格。很可能是这样的，外部公司出现了岗位空缺，考虑到公司业务正快速发展的时间和市场机会成本，所以会开出一个高于一般市场价格的工资水平来迅速补缺。另外，空缺的岗位职责实际可能比你在当前公司的职责更大，你还要考虑自己能否承担得起。别通过了面试，最后却过不了试用期，仅领了三个月或半年的翻倍工资，实际是得不偿失的。</p></blockquote><p> 认清自己，认清工资的本质。</p><h3 id="价值与价格"><a href="#价值与价格" class="headerlink" title="价值与价格"></a>价值与价格</h3><p> 程序员提供的是软件开发这种技术服务，而为了提供这种服务需要相当长时间的知识、技能和经验的积累。获得具备提供这类服务所需的学习和实践的时间构成了我们的「技能成本」，这形成了价值的一部分。</p><p> 而公司支付给程序员的工资就是提供技术服务的市场零售价。既然提到了「市场零售价」这个概念，想一想，市场上有没有同类的，成本差距不大的商品，零售价却可以差距巨大，这是为什么？</p><p> 我想到的是：女士皮包。曾经看到过一个案例：</p><blockquote><p>北京新光天地的某著名奢侈品专卖店遭遇盗窃，据说一个零售价好几万的包包被偷了。店长报警，但最终警方并没有刑事立案，因为那个包包的成本进价不过几百块钱。</p><p> 而在程序员提供技术服务的市场上也存在类似情况，技能经验水平差不多，但工资（零售价）差别巨大的个体。思考下包包的例子就明白了，奢侈品包包除了材料成本，还有什么成本？客户之所以要买这个奢侈品包包，最大的成本不在材料，而是在客户的头脑中建立起关于这个包包的品牌信息并形成一种对客户有独特价值的认知，这属于另一种成本：「传递成本」。</p></blockquote><h3 id="那么，程序员也有两个成本："><a href="#那么，程序员也有两个成本：" class="headerlink" title="那么，程序员也有两个成本："></a>那么，程序员也有两个成本：</h3><ul><li>技能成本：专注于提供技术和服务本身所占用的时间和注意力。 </li><li>传递成本：让你潜在的“客户”知道你所能提供的技术和服务的价值占用的时间和注意力。  这里有个案例很形象的说明两者的关系：</li></ul><blockquote><p>2003 年，一群海洋科学家历时三年，花费了三百万美元研究经费，完成了一份关于美国海岸环境状况的报告。这份报告反映了巨大的环境问题，可以说是触目惊心，所以参与研究的科学家都认为此报告一出必然石破天惊，成为每晚电视新闻主题，登上《时代周刊》的封面，等着被记者采访轰炸。结果除了纽约时报在二十二版给了个报道，报告几乎没有引起任何反响，这件事就这么结束了。</p><p> 花费了三百万美元研究经费，但仅有 3% 用于宣传，所以毫无影响力。这个案例之中，97% 的研究经费相当于「技能成本」，而用于宣传的 3% 相当于「传递成本」。当二者差距悬殊时，即使很有价值的东西也很难被市场所知晓，无法实现价值最大化。传递价值也需要成本，而且成本不低，正所谓酒香也怕巷子深。</p></blockquote><p> 所以，有人总是感觉自己被低估，因为他正巧知道了另一个和自己技术差不多的人，似乎只是人际关系更好反而获得的零售价更高。而程序员这类技术人员倾向于高估自身的价值，而认为市场低估了自己的价格，往往是因为对传递价值部分的成本没有足够的认识。</p><p> 这两个成本最终都会成为你价值的一部分，而且市场上确实会为此埋单。两个技能水平相当的程序员，一个在市场上默默无闻，一个在市场上拥有相当的影响力并占据了潜在客户的头脑。当后者要去市场上出售时，零售价通常会更高。</p><p> 搞清楚了价值的两个成本，就能很好的理解其价格了。思考下，为什么程序员在一线城市的人力和生活成本高居不下，企业还是要在一线城市最贵的写字楼扎堆？</p><p> 我的理解就是这两个成本的原因。程序员的技能成本大量依赖一线城市的高校教育资源。而程序员群体的普遍特性是忽视传递成本，那么企业只好在其扎堆的地方以最小化传递成本。因为考虑市场的时间和机会成本足以覆盖一线城市相对二三线城市的人力成本差价的。</p><p> 市场上的商品有两种销售方式：   </p><ul><li>卖的更多：大型卖场，薄利多销。   </li><li><p>卖的更贵：奢侈品，相对成本一百倍的毛利。</p><p>程序员提供的技术服务因为无法卖的更多，所以只有一种选择，像奢侈品一样卖的更贵，前提是学会像奢侈品牌一样思考。</p></li></ul><h3 id="发展与变化"><a href="#发展与变化" class="headerlink" title="发展与变化"></a>发展与变化</h3><p> 有时价值没变化，但工资也可能会一直涨。从现在起你即使停止技能增长，只是维持技能不被市场淘汰。在可预见的未来十多年，你的工资还会翻好几倍。这有两个原因：</p><ol start="2"><li>货币是保持贬值趋势的 </li><li><p>人口抚养比变化  人口抚养比，是一个国家非劳动的人口占总人口的比率。来自国家信息中心的数据，2011 年是中国人口红利发生转折的一年，从这年开始，总抚养比由降转升，2011 年为 34.4%，2012 年为 34.9%。这是劳动年龄人口相当长时期第一次出现了绝对下降，这意味着中国 15 岁以上不满 60 周岁的劳动年龄人口，在 2030 年以前将稳步地有所减少，中国已经面临“人口红利”逐步消退的压力。</p><p>简单说，就是 2016 年，14 亿人有 5 亿无法工作，人口抚养比 5/14=35.7%。如果 60 岁退休政策不变的话，2030 年大概会反过来，5 亿人工作养 9 亿无法工作（未成年、退休）的人。按这个趋势和经济规律，好消息是劳动力供给减少价格自然会上升；坏消息是，劳动强度和压力会更大，毕竟一个劳动人口差不多要养活两个非劳动人口。</p><p>另外一个值得关注的可能就是人工智能的发展，需要多少年，对人的替代因素能达到一个不可忽视的比例？这一点暂时只能且行且看吧。</p><p>…</p><p>关于工资，我们从表象到本质，从价格到价值，从当下到未来逐步看清了其中的真实。那么就只需客观面对这个真实，按照经济规律行事，理解市场定价原则。再积极一些，尽可能高效率的提高个人价值产出率，但也要认识到工资的“玻璃天花板”。</p><p>还记得前面提及的<a href="http://mp.weixin.qq.com/s?__biz=MzAxMTEyOTQ5OQ==&amp;mid=2650610717&amp;idx=1&amp;sn=f23d1afadab0c22249eab5f332cd0677&amp;chksm=834c7be9b43bf2ff13e168b25b319348da2f47d9df358721971b47f227322ee293551a6fba6c" target="_blank" rel="noopener">《两种增长类型》</a>吗？不幸的是工资增长符合对数曲线，但价值增长是可以有办法走指数曲线的，跨过了指数增长的拐点再兑现价值，收入就会突破工资增长的天花板。</p><p>至于如何做？还没有清晰的思考认知，倒是觉得和菜头这句话很有道理：</p></li></ol><blockquote><p>因为只有真正认识你价值的人，最终才会成为你价值的一部分。</p><p> 当然，如果你还在对数增长的陡峭期，那么就简单了，先让工资增长到天花板附近吧。</p></blockquote><blockquote><p>转载自 <a href="http://www.oschina.net/news/79515/why-programer-deserve-so-much-money" target="_blank" rel="noopener">http://www.oschina.net/news/79515/why-programer-deserve-so-much-money</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;  &lt;img src=&quot;https://static.oschina.net/uploads/space/2016/1130/113640_GNZC_2720166.jpg&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/p&gt;
&lt;p&gt; 听说一段时间不加薪，人就会开始思考起和工资有关的问题
      
    
    </summary>
    
    
      <category term="CSDN迁移" scheme="https://smallwhite.ml/tags/CSDN%E8%BF%81%E7%A7%BB/"/>
    
  </entry>
  
  <entry>
    <title>用HOSTS 解决近期github访问不正常的问题</title>
    <link href="https://smallwhite.ml/pub/uncategorized/yong-hosts-jie-jue-jin-qi-github-fang-wen-bu-zheng-chang-de-wen-ti.html"/>
    <id>https://smallwhite.ml/pub/uncategorized/yong-hosts-jie-jue-jin-qi-github-fang-wen-bu-zheng-chang-de-wen-ti.html</id>
    <published>2016-11-11T08:37:58.000Z</published>
    <updated>2020-11-18T03:13:32.678Z</updated>
    
    <content type="html"><![CDATA[<p>  hosts加入 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">151.101.100.133 assets-cdn.github.com</span><br></pre></td></tr></table></figure><p> 我这边就搞定了.</p><p> 如果还是不太正常 再加上这个域名的试试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">151.101.100.133 avatars1.githubusercontent.com</span><br><span class="line">151.101.100.133 avatars2.githubusercontent.com</span><br></pre></td></tr></table></figure><p> 原理是:</p><p> 在这个网站 <code>http://tool.chinaz.com/dns?type=1</code>  查询你访问github 出问题的 域名</p><p> 找个你访问正常的IP 修改hosts.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;  hosts加入 &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;co
      
    
    </summary>
    
    
      <category term="CSDN迁移" scheme="https://smallwhite.ml/tags/CSDN%E8%BF%81%E7%A7%BB/"/>
    
  </entry>
  
  <entry>
    <title>OSX 黑苹果 ps 2 键盘 驱动</title>
    <link href="https://smallwhite.ml/pub/uncategorized/osx-hei-ping-guo-ps-2-jian-pan-qu-dong.html"/>
    <id>https://smallwhite.ml/pub/uncategorized/osx-hei-ping-guo-ps-2-jian-pan-qu-dong.html</id>
    <published>2016-10-10T06:58:39.000Z</published>
    <updated>2020-11-18T03:13:32.674Z</updated>
    
    <content type="html"><![CDATA[<h3 id="驱动下载"><a href="#驱动下载" class="headerlink" title="驱动下载:"></a><a href></a>驱动下载:</h3><p> <a href="https://github.com/whtiehack/hello-world/raw/master/RehabMan-Voodoo-2016-0616.zip" target="_blank" rel="noopener">https://github.com/whtiehack/hello-world/raw/master/RehabMan-Voodoo-2016-0616.zip</a></p><h3 id="驱动安装工具下载"><a href="#驱动安装工具下载" class="headerlink" title="驱动安装工具下载:"></a><a href></a>驱动安装工具下载:</h3><p> <a href="https://github.com/whtiehack/hello-world/raw/master/kw.zip" target="_blank" rel="noopener">https://github.com/whtiehack/hello-world/raw/master/kw.zip</a></p><h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤:"></a><a href></a>安装步骤:</h3><ol start="2"><li>解压 RehabMan-Voodoo-2016-0616.zip </li><li>解压kw.zip </li><li>打开 Kext Wizard </li><li><p>选择  </p><blockquote><p>Installation -&gt; Browse -&gt;选择 ‘RehabMan-Voodoo-2016-0616/Release/VoodooPS2Controller.kext’ -&gt; Install</p></blockquote></li><li><p>运行  <code>&#39;RehabMan-Voodoo-2016-0616/Release/VoodooPS2Daemon&#39;</code>  </p></li><li>完成.    </li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;驱动下载&quot;&gt;&lt;a href=&quot;#驱动下载&quot; class=&quot;headerlink&quot; title=&quot;驱动下载:&quot;&gt;&lt;/a&gt;&lt;a href&gt;&lt;/a&gt;驱动下载:&lt;/h3&gt;&lt;p&gt; &lt;a href=&quot;https://github.com/whtiehack/hello-wor
      
    
    </summary>
    
    
      <category term="CSDN迁移" scheme="https://smallwhite.ml/tags/CSDN%E8%BF%81%E7%A7%BB/"/>
    
  </entry>
  
  <entry>
    <title>nodejs 捕获 promise 未处理的  reject</title>
    <link href="https://smallwhite.ml/pub/uncategorized/nodejs-bu-huo-promise-wei-chu-li-de-reject.html"/>
    <id>https://smallwhite.ml/pub/uncategorized/nodejs-bu-huo-promise-wei-chu-li-de-reject.html</id>
    <published>2016-09-23T03:58:14.000Z</published>
    <updated>2020-11-18T03:13:32.674Z</updated>
    
    <content type="html"><![CDATA[<h4 id="正常情况下-对于没有捕获的-promise的reject-会直接静默的吃掉-而这不是我们想要的"><a href="#正常情况下-对于没有捕获的-promise的reject-会直接静默的吃掉-而这不是我们想要的" class="headerlink" title="正常情况下,对于没有捕获的 promise的reject 会直接静默的吃掉.而这不是我们想要的."></a>正常情况下,对于没有捕获的 promise的reject 会直接静默的吃掉.而这不是我们想要的.</h4><h5 id="复现一下看看"><a href="#复现一下看看" class="headerlink" title="复现一下看看"></a>复现一下看看</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">function cb()&#123;</span><br><span class="line">    console.log(&apos;444&apos;);</span><br><span class="line">    fdsaf.fdafdas = 777;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">new Promise((resolve,reject)=&gt;&#123;</span><br><span class="line">    cb(1)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="解决"><a href="#解决" class="headerlink" title="解决:"></a>解决:</h3><h4 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h4><p> <a href="https://nodejs.org/dist/latest-v4.x/docs/api/process.html#process_event_unhandledrejection" target="_blank" rel="noopener">https://nodejs.org/dist/latest-v4.x/docs/api/process.html#process_event_unhandledrejection</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">process.on(&apos;unhandledRejection&apos;, (reason, p) =&gt; &#123;</span><br><span class="line">    console.log(&quot;Unhandled Rejection at: Promise &quot;, p, &quot; reason: &quot;, reason);</span><br><span class="line">    // application specific logging, throwing an error, or other logic here</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="toy-code"><a href="#toy-code" class="headerlink" title="toy code"></a>toy code</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">process.on(&apos;unhandledRejection&apos;, (reason, p) =&gt; &#123;</span><br><span class="line">    console.log(&quot;Unhandled Rejection at: Promise &quot;, p, &quot; reason: &quot;, reason);</span><br><span class="line">    // application specific logging, throwing an error, or other logic here</span><br><span class="line">&#125;);</span><br><span class="line">function cb()&#123;</span><br><span class="line">    console.log(&apos;444&apos;);</span><br><span class="line">    fdsaf.fdafdas = 777;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">new Promise((resolve,reject)=&gt;&#123;</span><br><span class="line">    cb(1)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="toy-code2-co"><a href="#toy-code2-co" class="headerlink" title="toy code2 co"></a>toy code2 co</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">process.on(&apos;unhandledRejection&apos;, (reason, p) =&gt; &#123;</span><br><span class="line">    console.log(&quot;Unhandled Rejection at: Promise &quot;, p, &quot; reason: &quot;, reason.stack);</span><br><span class="line">    // application specific logging, throwing an error, or other logic here</span><br><span class="line">&#125;);</span><br><span class="line">var co = require(&apos;co&apos;);</span><br><span class="line"></span><br><span class="line">function cb()&#123;</span><br><span class="line">    console.log(&apos;444&apos;);</span><br><span class="line">    fdsaf.fdafdas = 777;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">co(function*()&#123;</span><br><span class="line">    console.log(&apos;1111&apos;);</span><br><span class="line">    throw &apos;myerror```&apos;;</span><br><span class="line">&#125;).then(function(value) &#123;</span><br><span class="line">    console.log(value); // Success!</span><br><span class="line">&#125;).catch(err=&gt;&#123;</span><br><span class="line">    console.log(&apos;222&apos;);</span><br><span class="line">    console.log(err); // Error!</span><br><span class="line">    cb();</span><br><span class="line">    console.log(&apos;!!!!&apos;);</span><br><span class="line">&#125;).catch(err=&gt;&#123;</span><br><span class="line">    console.log(&apos;aaa :&apos;,err);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p> nodejs 6.6以后.对没有捕获的 reject 会发出一个警告.</p><blockquote><p>promises: Unhandled rejections now emit a <a href="https://nodejs.org/dist/latest-v6.x/docs/api/process.html#process_event_warning" target="_blank" rel="noopener">process warning</a> after the first tick. (Benjamin Gruenbaum) <a href="https://github.com/nodejs/node/pull/8223" target="_blank" rel="noopener">#8223</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;正常情况下-对于没有捕获的-promise的reject-会直接静默的吃掉-而这不是我们想要的&quot;&gt;&lt;a href=&quot;#正常情况下-对于没有捕获的-promise的reject-会直接静默的吃掉-而这不是我们想要的&quot; class=&quot;headerlink&quot; title
      
    
    </summary>
    
    
      <category term="CSDN迁移" scheme="https://smallwhite.ml/tags/CSDN%E8%BF%81%E7%A7%BB/"/>
    
  </entry>
  
  <entry>
    <title>webstorm nodejs  ESLint   简单配置</title>
    <link href="https://smallwhite.ml/pub/uncategorized/webstorm-nodejs-eslint-jian-dan-pei-zhi.html"/>
    <id>https://smallwhite.ml/pub/uncategorized/webstorm-nodejs-eslint-jian-dan-pei-zhi.html</id>
    <published>2016-09-03T05:54:38.000Z</published>
    <updated>2020-11-18T03:13:32.674Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ESLint-简介-官网-http-eslint-org"><a href="#ESLint-简介-官网-http-eslint-org" class="headerlink" title="ESLint 简介 官网 http://eslint.org/"></a>ESLint 简介 官网 <a href="http://eslint.org/" target="_blank" rel="noopener">http://eslint.org/</a></h2><p> 在团队协作中，为避免低级 Bug、产出风格统一的代码，会预先制定编码规范。使用 Lint 工具和代码风格检测工具，则可以辅助编码规范执行，有效控制代码质量。</p><p> 在以前的项目中，我们选择 JSHint 和 JSCS 结合使用，WebStorm 等开发环境已经支持这些工具，使用起来很顺手。然而，最近使用 React JSX 语法时，却遇到了问题：JSHint 不支持 JSX 语法。虽然有 <a href="https://github.com/STRML/JSXHint" target="_blank" rel="noopener">JSXHint</a> 这样的 JSHint 衍生工具，但个人并不喜欢这样的实现方式：不是以插件的形式实现，而是重新重新包装了一个工具。<a href="http://www.nczonline.net/" target="_blank" rel="noopener">Nicholas C. Zakas</a> 也不喜欢，所以有了 <a href="http://eslint.org/" target="_blank" rel="noopener">ESLint</a>。</p><p> 原来选择 JSHint 的时候，也对比过 ESLint，基于 ESLint 在速度上比 JSHint 要<a href="https://github.com/eslint/eslint#how-does-eslint-performance-compare-to-jshint" target="_blank" rel="noopener">慢一些</a>，最终使用了 JSHint。现在需要 JSX 支持了，才发现 ESLint 的设计理念更符合实际需求。</p><hr><p> ESLint 由 <a href="http://www.amazon.com/Professional-JavaScript-Developers-Nicholas-Zakas/dp/1118026691/ref=sr_1_13?tag=nczonline-20" target="_blank" rel="noopener">JavaScript 红宝书</a> 作者 Nicholas C. Zakas 编写， 2013 年发布第一个版本。 NCZ 的初衷不是重复造一个轮子，而是在实际需求得不到 <a href="https://github.com/eslint/eslint#why-dont-you-like-jshint" target="_blank" rel="noopener">JSHint 团队响应</a> 的情况下做出的选择：以可扩展、每条规则独立、不内置编码风格为理念编写一个 lint 工具。</p><p> ESLint 主要有以下特点：</p><ul><li>默认规则包含所有 JSLint、JSHint 中存在的规则，易迁移； </li><li>规则可配置性高：可设置「警告」、「错误」两个 error 等级，或者直接禁用； </li><li>包含代码风格检测的规则（可以丢掉 JSCS 了）； </li><li>支持插件扩展、自定义规则。  ESLint 已经<a href="http://eslint.org/blog/2014/11/es6-jsx-support/" target="_blank" rel="noopener">宣布支持 JSX</a>，不过目前为 alpha 版本，正式版发布之前可以先使用 <a href="https://www.npmjs.com/package/eslint-plugin-react" target="_blank" rel="noopener">eslint-plugin-react</a> 替代。</li></ul><hr><h4 id="更详细请移步-https-github-com-Jocs-ESLint-docs"><a href="#更详细请移步-https-github-com-Jocs-ESLint-docs" class="headerlink" title="更详细请移步 https://github.com/Jocs/ESLint_docs"></a>更详细请移步 <a href="https://github.com/Jocs/ESLint_docs" target="_blank" rel="noopener">https://github.com/Jocs/ESLint_docs</a></h4><hr><h2 id="webstorm-的-nodejs-ESLint-环境配置"><a href="#webstorm-的-nodejs-ESLint-环境配置" class="headerlink" title="webstorm 的 nodejs ESLint 环境配置"></a>webstorm 的 nodejs ESLint 环境配置</h2><ul><li>首先安装ESLint<br>  <code>npm install eslint -g</code><br> webstrom 要启用 eslint自动检测,需要 eslint全局安装 </li><li>配置一下  <code>.eslintrc</code>  文件 放在项目根目录  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;extends&quot;: &quot;eslint:recommended&quot;,</span><br><span class="line">    &quot;env&quot;:&#123;</span><br><span class="line">      &quot;node&quot;:true,</span><br><span class="line">      &quot;es6&quot;:true</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;rules&quot;: &#123;</span><br><span class="line">        &quot;semi&quot;: [&quot;error&quot;, &quot;always&quot;],</span><br><span class="line">        &quot;quotes&quot;: &quot;off&quot;,</span><br><span class="line">        &quot;no-console&quot;:&quot;off&quot;,</span><br><span class="line">        &quot;no-unused-vars&quot;:&quot;off&quot;,</span><br><span class="line">        &quot;no-unreachable&quot;:&quot;off&quot;,</span><br><span class="line">        &quot;no-redeclare&quot;:&quot;warn&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li>可选配置,让eslint忽略检测的文件  <code>.eslintignore</code>  配置规则与  <code>.gitignore</code>  一样  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#井号是注释  根据自己的项目需要进行忽略</span><br><span class="line"># 如果 .eslintrc 开启了 env  nodejs 那么 默认 node_modules是自动忽略的</span><br><span class="line">node_modules</span><br><span class="line">/node_modules/**</span><br><span class="line">*.sh</span><br><span class="line">game-server/web-server</span><br><span class="line">game-server/web-server/**</span><br><span class="line">tools</span><br><span class="line">tools/**</span><br><span class="line">test</span><br><span class="line">test/**</span><br><span class="line">game-server/purchase-server/lib/seedrandom.js</span><br><span class="line">game-server/app/staticData/data/temp/*.js</span><br></pre></td></tr></table></figure></li></ul><ul><li>打开webstorm<br> 选择 <code>File | Settings | Languages &amp; Frameworks | JavaScript | Code Quality Tools | ESLint</code>  勾选 Enable .</li></ul><ul><li>至此,在 webstorm内, eslint已经可以工作了. webstorm可以自动提示 eslint指出的代码问题.</li></ul><hr><h4 id="如需要手动检查所有代码的问题-可以打开-webstorm的-terminal"><a href="#如需要手动检查所有代码的问题-可以打开-webstorm的-terminal" class="headerlink" title="如需要手动检查所有代码的问题 ,可以打开 webstorm的 terminal,"></a>如需要手动检查所有代码的问题 ,可以打开 webstorm的 terminal,</h4><p> 输入  <code>eslint .</code> </p><h4 id="如需要自动修复一些不规范的代码问题-例如-没有分号的问题-可以"><a href="#如需要自动修复一些不规范的代码问题-例如-没有分号的问题-可以" class="headerlink" title="如需要自动修复一些不规范的代码问题 ,例如 没有分号的问题,可以"></a>如需要自动修复一些不规范的代码问题 ,例如 没有分号的问题,可以</h4><p> 输入  <code>eslint . --fix</code><br> <a href="http://eslint.org/docs/rules/" target="_blank" rel="noopener">http://eslint.org/docs/rules/</a> 带小扳手的规则都可以自动修复.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ESLint-简介-官网-http-eslint-org&quot;&gt;&lt;a href=&quot;#ESLint-简介-官网-http-eslint-org&quot; class=&quot;headerlink&quot; title=&quot;ESLint 简介 官网 http://eslint.org/&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="CSDN迁移" scheme="https://smallwhite.ml/tags/CSDN%E8%BF%81%E7%A7%BB/"/>
    
  </entry>
  
</feed>
